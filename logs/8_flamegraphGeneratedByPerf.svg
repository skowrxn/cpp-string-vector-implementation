<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::char_traits&lt;char&gt;::assign (1,445,937 samples, 0.03%)</title><rect x="974.6" y="1797" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="977.57" y="1807.5" ></text>
</g>
<g >
<title>foo_2 (104,254,362 samples, 2.17%)</title><rect x="799.7" y="1845" width="25.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="802.74" y="1855.5" >f..</text>
</g>
<g >
<title>operator new[] (1,464,465 samples, 0.03%)</title><rect x="823.2" y="1813" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="826.23" y="1823.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator[] (2,931,686 samples, 0.06%)</title><rect x="777.1" y="1845" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="780.13" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (5,160,266 samples, 0.11%)</title><rect x="1046.9" y="1829" width="1.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1049.94" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strlen (611,202 samples, 0.01%)</title><rect x="678.7" y="1829" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="681.73" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (1,462,660 samples, 0.03%)</title><rect x="983.3" y="1781" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="986.29" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,463,411 samples, 0.03%)</title><rect x="891.9" y="1813" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="894.86" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="69" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="79.5" ></text>
</g>
<g >
<title>[unknown] (149,960,513 samples, 3.13%)</title><rect x="54.5" y="2021" width="37.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="57.54" y="2031.5" >[un..</text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1621" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1631.5" ></text>
</g>
<g >
<title>[tests] (1,474,799 samples, 0.03%)</title><rect x="798.5" y="1829" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="801.47" y="1839.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (490,299 samples, 0.01%)</title><rect x="741.6" y="1749" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="744.61" y="1759.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (1,470,967 samples, 0.03%)</title><rect x="120.6" y="2037" width="0.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="123.62" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (651,006 samples, 0.01%)</title><rect x="705.2" y="1797" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="708.25" y="1807.5" ></text>
</g>
<g >
<title>_dl_map_object (923,937 samples, 0.02%)</title><rect x="1180.6" y="2053" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1183.62" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (24,246,401 samples, 0.51%)</title><rect x="13.2" y="2005" width="6.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="16.24" y="2015.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (4,161,298 samples, 0.09%)</title><rect x="54.5" y="2005" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="57.54" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (727,575 samples, 0.02%)</title><rect x="891.2" y="1845" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="894.15" y="1855.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (1,961,649 samples, 0.04%)</title><rect x="718.1" y="1813" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="721.09" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (736,378 samples, 0.02%)</title><rect x="847.8" y="1845" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="850.80" y="1855.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2,921,842 samples, 0.06%)</title><rect x="853.5" y="1813" width="0.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="856.51" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="693" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="703.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1397" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1407.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest6_Test::TestBody (2,887,977 samples, 0.06%)</title><rect x="848.0" y="1861" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="850.98" y="1871.5" ></text>
</g>
<g >
<title>testing::internal::StringStreamToString (484,394 samples, 0.01%)</title><rect x="1051.9" y="1957" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1054.90" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1493" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1173" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1183.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (737,261 samples, 0.02%)</title><rect x="984.9" y="1813" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="987.92" y="1823.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (735,930 samples, 0.02%)</title><rect x="1039.3" y="1813" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1042.32" y="1823.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (10,285,070 samples, 0.21%)</title><rect x="739.2" y="1797" width="2.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="742.20" y="1807.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest3_Test::TestBody (301,147,151 samples, 6.28%)</title><rect x="769.4" y="1861" width="74.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="772.38" y="1871.5" >PtrCStri..</text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="949" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="959.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (740,438 samples, 0.02%)</title><rect x="784.0" y="1813" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="787.01" y="1823.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (1,473,694 samples, 0.03%)</title><rect x="1019.7" y="1829" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1022.72" y="1839.5" ></text>
</g>
<g >
<title>operator delete[] (740,097 samples, 0.02%)</title><rect x="757.8" y="1813" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="760.82" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer_malloc_hook (2,190,745 samples, 0.05%)</title><rect x="462.0" y="2037" width="0.5" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="464.96" y="2047.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (5,180,947 samples, 0.11%)</title><rect x="756.9" y="1829" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="759.91" y="1839.5" ></text>
</g>
<g >
<title>testing::AssertionResult::operator bool (2,918,500 samples, 0.06%)</title><rect x="825.9" y="1845" width="0.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="828.94" y="1855.5" ></text>
</g>
<g >
<title>__run_exit_handlers (719,802 samples, 0.02%)</title><rect x="1056.6" y="2053" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1059.59" y="2063.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (2,923,135 samples, 0.06%)</title><rect x="873.2" y="1845" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="876.18" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (737,494 samples, 0.02%)</title><rect x="764.1" y="1813" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="767.12" y="1823.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (30,855,775 samples, 0.64%)</title><rect x="155.9" y="2037" width="7.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="158.85" y="2047.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2,188,814 samples, 0.05%)</title><rect x="794.2" y="1813" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="797.15" y="1823.5" ></text>
</g>
<g >
<title>testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (1,640,121,368 samples, 34.22%)</title><rect x="647.4" y="1893" width="403.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="650.40" y="1903.5" >testing::internal::HandleExceptionsInMethodIfSupported&lt;..</text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (5,156,859 samples, 0.11%)</title><rect x="946.0" y="1845" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="949.01" y="1855.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (2,948,274 samples, 0.06%)</title><rect x="114.2" y="2021" width="0.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="117.16" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1,473,431 samples, 0.03%)</title><rect x="973.1" y="1813" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="976.12" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (91,523,757 samples, 1.91%)</title><rect x="92.4" y="2037" width="22.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.36" y="2047.5" >[..</text>
</g>
<g >
<title>PtrCStringVector::push_back (100,225,259 samples, 2.09%)</title><rect x="1011.2" y="1845" width="24.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1014.20" y="1855.5" >P..</text>
</g>
<g >
<title>__lsan::CollectLeaksCb (19,966,161 samples, 0.42%)</title><rect x="163.4" y="2037" width="5.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="166.45" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="773" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="783.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (737,384 samples, 0.02%)</title><rect x="982.9" y="1797" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="985.93" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="117" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="127.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (739,159 samples, 0.02%)</title><rect x="756.2" y="1829" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="759.18" y="1839.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (489,862 samples, 0.01%)</title><rect x="738.0" y="1813" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="741.00" y="1823.5" ></text>
</g>
<g >
<title>testing::internal::EqHelper::Compare&lt;unsigned long, unsigned long,  (483,532 samples, 0.01%)</title><rect x="1049.2" y="1845" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1052.21" y="1855.5" ></text>
</g>
<g >
<title>testing::internal::ColoredPrintf (485,701 samples, 0.01%)</title><rect x="1051.4" y="1909" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1054.42" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1573" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1253" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1263.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (74,785,691 samples, 1.56%)</title><rect x="19.2" y="2037" width="18.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="22.21" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (727,385 samples, 0.02%)</title><rect x="476.1" y="1989" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="479.10" y="1999.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (737,437 samples, 0.02%)</title><rect x="922.4" y="1813" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="925.39" y="1823.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (734,906 samples, 0.02%)</title><rect x="848.5" y="1845" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="851.51" y="1855.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (611,576 samples, 0.01%)</title><rect x="702.2" y="1717" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="705.21" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::IsRssLimitExceeded (736,498 samples, 0.02%)</title><rect x="54.4" y="2005" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="57.36" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,203,353 samples, 0.05%)</title><rect x="822.5" y="1813" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="825.51" y="1823.5" ></text>
</g>
<g >
<title>__lsan::MarkIndirectlyLeakedCb (738,629 samples, 0.02%)</title><rect x="109.1" y="2021" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="112.06" y="2031.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (617,109 samples, 0.01%)</title><rect x="671.9" y="1813" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="674.90" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_head (1,476,692 samples, 0.03%)</title><rect x="829.6" y="1765" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="832.56" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (38,411,478 samples, 0.80%)</title><rect x="972.0" y="1845" width="9.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="975.04" y="1855.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (3,182,624 samples, 0.07%)</title><rect x="427.7" y="1989" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="430.75" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4,375,470 samples, 0.09%)</title><rect x="890.1" y="1845" width="1.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="893.07" y="1855.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (3,921,211 samples, 0.08%)</title><rect x="720.4" y="1813" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="723.38" y="1823.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (68,013,155 samples, 1.42%)</title><rect x="37.8" y="2037" width="16.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="40.79" y="2047.5" ></text>
</g>
<g >
<title>__strlen_avx2 (5,159,118 samples, 0.11%)</title><rect x="1018.3" y="1813" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1021.27" y="1823.5" ></text>
</g>
<g >
<title>testing::internal::String::CStringEquals (11,063,299 samples, 0.23%)</title><rect x="766.7" y="1829" width="2.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="769.66" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedOrDieOnFatalError (734,172 samples, 0.02%)</title><rect x="383.0" y="2037" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="386.01" y="2047.5" ></text>
</g>
<g >
<title>__strlen_avx2 (18,545,188 samples, 0.39%)</title><rect x="666.4" y="1829" width="4.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="669.43" y="1839.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (709,570 samples, 0.01%)</title><rect x="695.2" y="1813" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="698.22" y="1823.5" ></text>
</g>
<g >
<title>__lsan::ResetTagsCb (13,309,593 samples, 0.28%)</title><rect x="234.6" y="2037" width="3.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="237.57" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (731,670 samples, 0.02%)</title><rect x="708.0" y="1781" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="711.02" y="1791.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (1,451,876 samples, 0.03%)</title><rect x="1052.3" y="2021" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1055.25" y="2031.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (737,155 samples, 0.02%)</title><rect x="827.0" y="1829" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="830.03" y="1839.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (1,475,344 samples, 0.03%)</title><rect x="1047.7" y="1797" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1050.67" y="1807.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (2,172,333 samples, 0.05%)</title><rect x="847.3" y="1829" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="850.27" y="1839.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (43,326,965 samples, 0.90%)</title><rect x="98.2" y="2021" width="10.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="101.21" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1749" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3,688,369 samples, 0.08%)</title><rect x="1042.2" y="1813" width="0.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1045.22" y="1823.5" ></text>
</g>
<g >
<title>PtrCStringVector::size (488,570 samples, 0.01%)</title><rect x="647.8" y="1861" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="650.77" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="389" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="399.5" ></text>
</g>
<g >
<title>testing::Test::Run (1,640,604,306 samples, 34.23%)</title><rect x="647.3" y="1909" width="403.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="650.28" y="1919.5" >testing::Test::Run</text>
</g>
<g >
<title>__asan_stack_malloc_2 (736,829 samples, 0.02%)</title><rect x="758.2" y="1845" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="761.19" y="1855.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (740,358 samples, 0.02%)</title><rect x="754.2" y="1829" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="757.15" y="1839.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (737,830 samples, 0.02%)</title><rect x="761.6" y="1813" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="764.58" y="1823.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (20,612,662 samples, 0.43%)</title><rect x="613.1" y="2053" width="5.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="616.12" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1221" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1541" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1551.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (618,858 samples, 0.01%)</title><rect x="705.6" y="1813" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="708.56" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4,423,864 samples, 0.09%)</title><rect x="1045.7" y="1845" width="1.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1048.67" y="1855.5" ></text>
</g>
<g >
<title>testing::internal::Delete&lt;testing::TestInfo&gt; (719,802 samples, 0.02%)</title><rect x="1056.6" y="1877" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1059.59" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1605" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1285" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1295.5" ></text>
</g>
<g >
<title>operator new[] (725,700 samples, 0.02%)</title><rect x="846.7" y="1829" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="849.73" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="437" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="447.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (46,003,285 samples, 0.96%)</title><rect x="124.2" y="2037" width="11.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="127.24" y="2047.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (52,973,194 samples, 1.11%)</title><rect x="777.9" y="1845" width="13.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="780.85" y="1855.5" ></text>
</g>
<g >
<title>operator delete[] (1,963,272 samples, 0.04%)</title><rect x="729.9" y="1813" width="0.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="732.92" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="805" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="815.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (191,720,887 samples, 4.00%)</title><rect x="175.2" y="2037" width="47.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="178.22" y="2047.5" >__ls..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,456,928 samples, 0.03%)</title><rect x="882.9" y="1813" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="885.87" y="1823.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (736,297 samples, 0.02%)</title><rect x="981.1" y="1797" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="984.13" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,451,830 samples, 0.03%)</title><rect x="882.3" y="1781" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="885.34" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="741" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="751.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator= (7,401,652 samples, 0.15%)</title><rect x="775.3" y="1845" width="1.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="778.31" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="821" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="831.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (731,670 samples, 0.02%)</title><rect x="708.0" y="1749" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="711.02" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (735,097 samples, 0.02%)</title><rect x="982.4" y="1781" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="985.39" y="1791.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (737,476 samples, 0.02%)</title><rect x="1041.7" y="1733" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1044.68" y="1743.5" ></text>
</g>
<g >
<title>__strlen_avx2 (739,689 samples, 0.02%)</title><rect x="790.4" y="1829" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="793.35" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (731,670 samples, 0.02%)</title><rect x="708.0" y="1765" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="711.02" y="1775.5" ></text>
</g>
<g >
<title>operator new[] (2,159,316 samples, 0.05%)</title><rect x="774.8" y="1829" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="777.78" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (2,212,400 samples, 0.05%)</title><rect x="825.4" y="1845" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="828.40" y="1855.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (2,888,041 samples, 0.06%)</title><rect x="694.9" y="1845" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="697.86" y="1855.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (3,690,133 samples, 0.08%)</title><rect x="838.3" y="1717" width="0.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="841.26" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="2005" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (624,699 samples, 0.01%)</title><rect x="705.4" y="1829" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="708.41" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (715,608 samples, 0.01%)</title><rect x="819.1" y="1797" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="822.10" y="1807.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (980,332 samples, 0.02%)</title><rect x="724.6" y="1829" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="727.61" y="1839.5" ></text>
</g>
<g >
<title>operator new[] (1,959,857 samples, 0.04%)</title><rect x="727.5" y="1829" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="730.50" y="1839.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (36,070,910 samples, 0.75%)</title><rect x="778.9" y="1829" width="8.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="781.93" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (618,276 samples, 0.01%)</title><rect x="706.4" y="1797" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="709.36" y="1807.5" ></text>
</g>
<g >
<title>testing::internal::SplitString (486,120 samples, 0.01%)</title><rect x="1051.5" y="1909" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1054.54" y="1919.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (31,675,291 samples, 0.66%)</title><rect x="922.0" y="1829" width="7.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="925.03" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="517" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="527.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_strcmp (737,745 samples, 0.02%)</title><rect x="843.2" y="1813" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="846.15" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (6,210,560 samples, 0.13%)</title><rect x="474.6" y="2005" width="1.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="477.57" y="2015.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (491,255 samples, 0.01%)</title><rect x="729.1" y="1813" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="732.07" y="1823.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (1,199,668 samples, 0.03%)</title><rect x="92.4" y="2021" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="95.36" y="2031.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (490,179 samples, 0.01%)</title><rect x="92.7" y="37" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="95.65" y="47.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="245" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="255.5" ></text>
</g>
<g >
<title>[unknown] (736,940 samples, 0.02%)</title><rect x="1039.1" y="1813" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1042.14" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (736,880 samples, 0.02%)</title><rect x="1045.3" y="1781" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1048.31" y="1791.5" ></text>
</g>
<g >
<title>__interceptor_strcmp.part.0 (82,455,990 samples, 1.72%)</title><rect x="947.6" y="1845" width="20.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="950.64" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1957" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (740,199 samples, 0.02%)</title><rect x="756.0" y="1829" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="759.00" y="1839.5" ></text>
</g>
<g >
<title>testing::UnitTest::~UnitTest (719,802 samples, 0.02%)</title><rect x="1056.6" y="2037" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1059.59" y="2047.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest2_Test::TestBody (112,321,747 samples, 2.34%)</title><rect x="741.7" y="1861" width="27.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="744.73" y="1871.5" >P..</text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="181" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="191.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="293" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="303.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (740,749 samples, 0.02%)</title><rect x="776.6" y="1813" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="779.59" y="1823.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (23,158,432 samples, 0.48%)</title><rect x="916.0" y="1829" width="5.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="918.96" y="1839.5" ></text>
</g>
<g >
<title>operator delete (708,436 samples, 0.01%)</title><rect x="891.7" y="1781" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="894.69" y="1791.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (978,528 samples, 0.02%)</title><rect x="738.1" y="1813" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="741.12" y="1823.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (725,743 samples, 0.02%)</title><rect x="981.0" y="1797" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="983.96" y="1807.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (735,002 samples, 0.02%)</title><rect x="883.1" y="1797" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="886.05" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (8,106,571 samples, 0.17%)</title><rect x="1043.1" y="1813" width="2.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1046.13" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (737,349 samples, 0.02%)</title><rect x="1041.9" y="1765" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1044.86" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="981" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="991.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (4,393,643 samples, 0.09%)</title><rect x="123.2" y="2037" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="126.15" y="2047.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (736,698 samples, 0.02%)</title><rect x="155.7" y="2037" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="158.67" y="2047.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (8,599,191 samples, 0.18%)</title><rect x="645.0" y="2053" width="2.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="648.05" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (140,675,592 samples, 2.93%)</title><rect x="55.9" y="2005" width="34.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="58.92" y="2015.5" >__..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (5,759,511 samples, 0.12%)</title><rect x="1089.0" y="2053" width="1.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1091.95" y="2063.5" ></text>
</g>
<g >
<title>testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (1,642,675,734 samples, 34.27%)</title><rect x="647.3" y="1973" width="404.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="650.28" y="1983.5" >testing::internal::HandleSehExceptionsInMethodIfSupport..</text>
</g>
<g >
<title>__asan::asan_memalign (1,446,867 samples, 0.03%)</title><rect x="55.6" y="2005" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="58.56" y="2015.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (1,478,593 samples, 0.03%)</title><rect x="755.1" y="1829" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="758.11" y="1839.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (38,628,615 samples, 0.81%)</title><rect x="744.5" y="1829" width="9.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="747.46" y="1839.5" ></text>
</g>
<g >
<title>__strlen_avx2 (704,405 samples, 0.01%)</title><rect x="845.5" y="1813" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="848.49" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (3,787,793 samples, 0.08%)</title><rect x="705.9" y="1813" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="708.88" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1909" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (24,887,081 samples, 0.52%)</title><rect x="883.2" y="1813" width="6.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="886.23" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (698,698 samples, 0.01%)</title><rect x="882.7" y="1781" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="885.70" y="1791.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (35,415,834 samples, 0.74%)</title><rect x="147.0" y="2037" width="8.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="149.95" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::ReturnToAllocator (8,750,164 samples, 0.18%)</title><rect x="406.9" y="2037" width="2.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="409.93" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="565" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="575.5" ></text>
</g>
<g >
<title>operator delete[] (620,683 samples, 0.01%)</title><rect x="677.9" y="1813" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="680.93" y="1823.5" ></text>
</g>
<g >
<title>testing::internal::BoolFromGTestEnv (484,394 samples, 0.01%)</title><rect x="1051.9" y="2005" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1054.90" y="2015.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (740,157 samples, 0.02%)</title><rect x="754.0" y="1829" width="0.2" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="756.97" y="1839.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (30,946,431 samples, 0.65%)</title><rect x="1011.9" y="1829" width="7.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1014.92" y="1839.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (47,032,905 samples, 0.98%)</title><rect x="712.7" y="1829" width="11.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="715.67" y="1839.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (1,239,182 samples, 0.03%)</title><rect x="702.1" y="1749" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="705.06" y="1759.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (2,198,246 samples, 0.05%)</title><rect x="707.7" y="1829" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="710.66" y="1839.5" ></text>
</g>
<g >
<title>__asan_unregister_globals (1,444,592 samples, 0.03%)</title><rect x="93.3" y="2005" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="96.32" y="2015.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator[] (732,195 samples, 0.02%)</title><rect x="921.7" y="1845" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="924.66" y="1855.5" ></text>
</g>
<g >
<title>operator new[] (491,003 samples, 0.01%)</title><rect x="731.6" y="1845" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="734.61" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (4,427,658 samples, 0.09%)</title><rect x="765.4" y="1765" width="1.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="768.39" y="1775.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::RunAllTests (1,642,675,734 samples, 34.27%)</title><rect x="647.3" y="1957" width="404.4" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="650.28" y="1967.5" >testing::internal::UnitTestImpl::RunAllTests</text>
</g>
<g >
<title>testing::UnitTest::Run (1,642,675,734 samples, 34.27%)</title><rect x="647.3" y="2005" width="404.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="650.28" y="2015.5" >testing::UnitTest::Run</text>
</g>
<g >
<title>__asan::GetCurrentThread (737,395 samples, 0.02%)</title><rect x="922.6" y="1813" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="925.57" y="1823.5" ></text>
</g>
<g >
<title>testing::TestInfo::~TestInfo (719,802 samples, 0.02%)</title><rect x="1056.6" y="1861" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1059.59" y="1871.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (13,242,323 samples, 0.28%)</title><rect x="826.7" y="1845" width="3.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="829.66" y="1855.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (737,355 samples, 0.02%)</title><rect x="766.5" y="1781" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="769.48" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1349" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1359.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (1,341,700 samples, 0.03%)</title><rect x="1048.9" y="1829" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1051.88" y="1839.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (2,197,147 samples, 0.05%)</title><rect x="832.8" y="1829" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="835.82" y="1839.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (3,560,690 samples, 0.07%)</title><rect x="12.4" y="2005" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="15.36" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::IsRssLimitExceeded (3,676,756 samples, 0.08%)</title><rect x="90.5" y="2005" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="93.55" y="2015.5" ></text>
</g>
<g >
<title>__libc_start_call_main (1,642,675,734 samples, 34.27%)</title><rect x="647.3" y="2053" width="404.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="650.28" y="2063.5" >__libc_start_call_main</text>
</g>
<g >
<title>testing::internal::CmpHelperSTREQ (30,981,998 samples, 0.65%)</title><rect x="761.8" y="1845" width="7.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="764.76" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (39,397,617 samples, 0.82%)</title><rect x="880.4" y="1829" width="9.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="883.38" y="1839.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperNE&lt;char*, char*&gt; (2,198,246 samples, 0.05%)</title><rect x="707.7" y="1845" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="710.66" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1,474,788 samples, 0.03%)</title><rect x="1041.5" y="1797" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1044.50" y="1807.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator&amp; (721,841 samples, 0.02%)</title><rect x="37.6" y="2037" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="40.62" y="2047.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (2,192,688 samples, 0.05%)</title><rect x="983.1" y="1813" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="986.11" y="1823.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (617,111 samples, 0.01%)</title><rect x="700.9" y="1781" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="703.92" y="1791.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (1,456,226 samples, 0.03%)</title><rect x="844.4" y="1813" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="847.41" y="1823.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1,239,182 samples, 0.03%)</title><rect x="702.1" y="1733" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="705.06" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (738,144 samples, 0.02%)</title><rect x="1043.0" y="1797" width="0.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1045.95" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memset (482,434 samples, 0.01%)</title><rect x="114.0" y="2021" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="117.05" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (725,041 samples, 0.02%)</title><rect x="790.0" y="1829" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="792.99" y="1839.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (10,305,868 samples, 0.21%)</title><rect x="728.2" y="1845" width="2.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="731.22" y="1855.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (489,708 samples, 0.01%)</title><rect x="731.7" y="1845" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="734.73" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (486,120 samples, 0.01%)</title><rect x="1051.5" y="1845" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1054.54" y="1855.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (740,172 samples, 0.02%)</title><rect x="758.0" y="1813" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="761.00" y="1823.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (738,084 samples, 0.02%)</title><rect x="1047.7" y="1781" width="0.2" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1050.67" y="1791.5" ></text>
</g>
<g >
<title>testing::internal::StringStreamToString (490,981 samples, 0.01%)</title><rect x="1051.3" y="1845" width="0.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1054.30" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (11,617,755 samples, 0.24%)</title><rect x="700.0" y="1813" width="2.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="702.99" y="1823.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (22,520,357 samples, 0.47%)</title><rect x="462.5" y="2021" width="5.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="465.50" y="2031.5" ></text>
</g>
<g >
<title>__strlen_avx2 (5,052,725 samples, 0.11%)</title><rect x="676.7" y="1813" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="679.68" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_M_head (1,470,866 samples, 0.03%)</title><rect x="736.4" y="1749" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="739.43" y="1759.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (2,923,135 samples, 0.06%)</title><rect x="873.2" y="1829" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="876.18" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1109" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1119.5" ></text>
</g>
<g >
<title>__asan::asan_delete (1,474,376 samples, 0.03%)</title><rect x="784.4" y="1813" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="787.37" y="1823.5" ></text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (3,869,277 samples, 0.08%)</title><rect x="1051.7" y="2053" width="0.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1054.66" y="2063.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (5,889,224 samples, 0.12%)</title><rect x="788.4" y="1829" width="1.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="791.36" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strcat (715,721 samples, 0.01%)</title><rect x="848.3" y="1829" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="851.34" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (736,043 samples, 0.02%)</title><rect x="1045.5" y="1829" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1048.49" y="1839.5" ></text>
</g>
<g >
<title>[tests] (737,257 samples, 0.02%)</title><rect x="1006.8" y="1829" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1009.81" y="1839.5" ></text>
</g>
<g >
<title>testing::internal::String::CStringEquals (12,514,818 samples, 0.26%)</title><rect x="840.3" y="1829" width="3.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="843.26" y="1839.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (737,470 samples, 0.02%)</title><rect x="983.5" y="1717" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="986.47" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (734,906 samples, 0.02%)</title><rect x="848.5" y="1829" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="851.51" y="1839.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (1,475,901 samples, 0.03%)</title><rect x="1050.6" y="1861" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1053.60" y="1871.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (54,271,913 samples, 1.13%)</title><rect x="743.6" y="1845" width="13.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="746.55" y="1855.5" ></text>
</g>
<g >
<title>PtrCStringVector::PtrCStringVector (18,910,639 samples, 0.39%)</title><rect x="770.7" y="1845" width="4.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="773.66" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1781" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1791.5" ></text>
</g>
<g >
<title>__lsan::DisabledInThisThread (5,541,568 samples, 0.12%)</title><rect x="168.4" y="2037" width="1.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="171.36" y="2047.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (1,474,124 samples, 0.03%)</title><rect x="799.0" y="1845" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="802.01" y="1855.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (1,471,980 samples, 0.03%)</title><rect x="729.2" y="1813" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="732.19" y="1823.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (3,690,092 samples, 0.08%)</title><rect x="765.6" y="1749" width="0.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="768.57" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (2,124,540 samples, 0.04%)</title><rect x="474.0" y="2005" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="477.05" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1733" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (651,006 samples, 0.01%)</title><rect x="705.2" y="1781" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="708.25" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (739,293 samples, 0.02%)</title><rect x="752.2" y="1813" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="755.15" y="1823.5" ></text>
</g>
<g >
<title>_init (484,292 samples, 0.01%)</title><rect x="1180.9" y="2053" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1183.89" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (3,615,940 samples, 0.08%)</title><rect x="473.0" y="2021" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="475.97" y="2031.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (4,404,547 samples, 0.09%)</title><rect x="740.5" y="1733" width="1.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="743.53" y="1743.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I__ZN73PtrCStringVectorTester_defaultConstructor_sizeOfEmptyContainerIsZero_Test10test_info_E (966,237 samples, 0.02%)</title><rect x="1051.7" y="2037" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1054.66" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (261,676,029 samples, 5.46%)</title><rect x="1090.4" y="2053" width="64.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1093.37" y="2063.5" >__sanit..</text>
</g>
<g >
<title>PtrCStringVectorTester_antytest8_Test::TestBody (366,259,060 samples, 7.64%)</title><rect x="893.5" y="1861" width="90.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="896.49" y="1871.5" >PtrCString..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (737,272 samples, 0.02%)</title><rect x="764.8" y="1797" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="767.84" y="1807.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (5,162,878 samples, 0.11%)</title><rect x="784.7" y="1813" width="1.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="787.74" y="1823.5" ></text>
</g>
<g >
<title>__strpbrk_sse42 (22,520,357 samples, 0.47%)</title><rect x="462.5" y="2037" width="5.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="465.50" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1989" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1999.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (6,641,290 samples, 0.14%)</title><rect x="765.0" y="1797" width="1.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="768.03" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (483,206 samples, 0.01%)</title><rect x="1051.7" y="1973" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1054.66" y="1983.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperEQ&lt;unsigned long, int&gt; (729,092 samples, 0.02%)</title><rect x="892.4" y="1845" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="895.40" y="1855.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (1,466,539 samples, 0.03%)</title><rect x="731.2" y="1845" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="734.24" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (486,120 samples, 0.01%)</title><rect x="1051.5" y="1893" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1054.54" y="1903.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (739,884 samples, 0.02%)</title><rect x="832.6" y="1829" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="835.64" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (486,120 samples, 0.01%)</title><rect x="1051.5" y="1861" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1054.54" y="1871.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (674,424 samples, 0.01%)</title><rect x="1049.0" y="1717" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1052.05" y="1727.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (1,456,660 samples, 0.03%)</title><rect x="794.7" y="1813" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="797.69" y="1823.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::~UnitTestImpl (719,802 samples, 0.02%)</title><rect x="1056.6" y="2021" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1059.59" y="2031.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (3,683,843 samples, 0.08%)</title><rect x="892.6" y="1813" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="895.58" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,217,573 samples, 0.05%)</title><rect x="751.6" y="1813" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="754.61" y="1823.5" ></text>
</g>
<g >
<title>__strlen_avx2 (978,108 samples, 0.02%)</title><rect x="722.6" y="1813" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="725.56" y="1823.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (737,828 samples, 0.02%)</title><rect x="798.8" y="1845" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="801.83" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1653" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (43,402,349 samples, 0.91%)</title><rect x="1067.3" y="2053" width="10.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1070.30" y="2063.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (9,407,842 samples, 0.20%)</title><rect x="843.9" y="1829" width="2.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="846.88" y="1839.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (490,981 samples, 0.01%)</title><rect x="1051.3" y="1829" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1054.30" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (737,349 samples, 0.02%)</title><rect x="1041.9" y="1781" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1044.86" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="901" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="911.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (5,165,044 samples, 0.11%)</title><rect x="10.0" y="2053" width="1.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (8,115,000 samples, 0.17%)</title><rect x="827.9" y="1813" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="830.92" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="965" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="975.5" ></text>
</g>
<g >
<title>__strlen_avx2 (11,025,899 samples, 0.23%)</title><rect x="877.7" y="1845" width="2.7" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="880.66" y="1855.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest1_Test::TestBody (136,205,535 samples, 2.84%)</title><rect x="708.2" y="1861" width="33.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="711.20" y="1871.5" >Pt..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (736,306 samples, 0.02%)</title><rect x="893.3" y="1749" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="896.31" y="1759.5" ></text>
</g>
<g >
<title>std::for_each&lt;__gnu_cxx::__normal_iterator&lt;testing::TestInfo* const*, std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt; &gt;, void  (719,802 samples, 0.02%)</title><rect x="1056.6" y="1893" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1059.59" y="1903.5" ></text>
</g>
<g >
<title>__pipe (1,204,570 samples, 0.03%)</title><rect x="378.4" y="2037" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="381.38" y="2047.5" ></text>
</g>
<g >
<title>do_lookup_x (431,507 samples, 0.01%)</title><rect x="1181.2" y="2053" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1184.24" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="661" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="671.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1141" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (3,618,792 samples, 0.08%)</title><rect x="891.3" y="1845" width="0.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="894.33" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1461" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (483,206 samples, 0.01%)</title><rect x="1051.7" y="1989" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1054.66" y="1999.5" ></text>
</g>
<g >
<title>operator new (716,710 samples, 0.01%)</title><rect x="882.0" y="1749" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="884.99" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (159,005,075 samples, 3.32%)</title><rect x="409.3" y="2021" width="39.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="412.26" y="2031.5" >[un..</text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (11,774,567 samples, 0.25%)</title><rect x="227.9" y="2037" width="2.9" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="230.90" y="2047.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperNE&lt;char*, char*&gt; (2,018,270 samples, 0.04%)</title><rect x="1048.7" y="1845" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1051.72" y="1855.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (737,506 samples, 0.02%)</title><rect x="833.4" y="1829" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="836.36" y="1839.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (2,210,363 samples, 0.05%)</title><rect x="1040.6" y="1765" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1043.59" y="1775.5" ></text>
</g>
<g >
<title>[tests] (980,759 samples, 0.02%)</title><rect x="724.2" y="1829" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="727.25" y="1839.5" ></text>
</g>
<g >
<title>testing::internal::TestEventRepeater::OnTestEnd (490,981 samples, 0.01%)</title><rect x="1051.3" y="1909" width="0.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1054.30" y="1919.5" ></text>
</g>
<g >
<title>__lsan::ScanRangeForPointers (10,491,370 samples, 0.22%)</title><rect x="1053.1" y="2053" width="2.6" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="1056.12" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (736,378 samples, 0.02%)</title><rect x="847.8" y="1813" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="850.80" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (17,471,209 samples, 0.36%)</title><rect x="672.4" y="1813" width="4.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="675.38" y="1823.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (1,474,878 samples, 0.03%)</title><rect x="94.0" y="2021" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="96.98" y="2031.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (645,931 samples, 0.01%)</title><rect x="1036.5" y="1813" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1039.50" y="1823.5" ></text>
</g>
<g >
<title>check_match (864,558 samples, 0.02%)</title><rect x="1181.0" y="2053" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1184.02" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::internal_close (969,935 samples, 0.02%)</title><rect x="1155.9" y="2053" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1158.94" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="853" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="597" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="607.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (737,234 samples, 0.02%)</title><rect x="947.1" y="1813" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="950.10" y="1823.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (708,635 samples, 0.01%)</title><rect x="672.2" y="1813" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="675.21" y="1823.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest7_Test::TestBody (181,962,567 samples, 3.80%)</title><rect x="848.7" y="1861" width="44.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="851.70" y="1871.5" >PtrC..</text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="229" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="239.5" ></text>
</g>
<g >
<title>__lsan::MarkIndirectlyLeakedCb (15,332,656 samples, 0.32%)</title><rect x="230.8" y="2037" width="3.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="233.80" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1765" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1701" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1711.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (711,908 samples, 0.01%)</title><rect x="854.4" y="1829" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="857.41" y="1839.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (2,155,381 samples, 0.04%)</title><rect x="891.3" y="1797" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="894.33" y="1807.5" ></text>
</g>
<g >
<title>testing::internal::Delete&lt;testing::TestSuite&gt; (719,802 samples, 0.02%)</title><rect x="1056.6" y="1957" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1059.59" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="789" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="799.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="277" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="287.5" ></text>
</g>
<g >
<title>__interceptor_strlen (715,403 samples, 0.01%)</title><rect x="696.1" y="1845" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="699.06" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3,615,940 samples, 0.08%)</title><rect x="473.0" y="2037" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="475.97" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1269" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1589" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1599.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (737,226 samples, 0.02%)</title><rect x="832.5" y="1829" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="835.46" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,474,788 samples, 0.03%)</title><rect x="1041.5" y="1781" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1044.50" y="1791.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::GetTestSuite (483,031 samples, 0.01%)</title><rect x="1051.8" y="1973" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1054.78" y="1983.5" ></text>
</g>
<g >
<title>operator delete[] (740,070 samples, 0.02%)</title><rect x="777.0" y="1813" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="779.95" y="1823.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (735,639 samples, 0.02%)</title><rect x="844.2" y="1813" width="0.2" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="847.23" y="1823.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (7,401,652 samples, 0.15%)</title><rect x="775.3" y="1829" width="1.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="778.31" y="1839.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (713,338 samples, 0.01%)</title><rect x="891.3" y="1781" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="894.33" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="933" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="943.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (9,818,229 samples, 0.20%)</title><rect x="404.5" y="2037" width="2.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="407.51" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (736,373 samples, 0.02%)</title><rect x="1042.0" y="1797" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1045.04" y="1807.5" ></text>
</g>
<g >
<title>testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (1,642,675,734 samples, 34.27%)</title><rect x="647.3" y="1989" width="404.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="650.28" y="1999.5" >testing::internal::HandleExceptionsInMethodIfSupported&lt;..</text>
</g>
<g >
<title>__interceptor_strlen.part.0 (5,175,183 samples, 0.11%)</title><rect x="805.7" y="1813" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="808.73" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (490,193 samples, 0.01%)</title><rect x="726.5" y="1829" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="729.54" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (735,831 samples, 0.02%)</title><rect x="891.0" y="1829" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="893.97" y="1839.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (3,424,781 samples, 0.07%)</title><rect x="740.7" y="1717" width="0.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="743.65" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (88,255,664 samples, 1.84%)</title><rect x="1156.5" y="2053" width="21.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1159.53" y="2063.5" >_..</text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (2,217,726 samples, 0.05%)</title><rect x="750.2" y="1813" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="753.15" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (718,557 samples, 0.01%)</title><rect x="845.1" y="1813" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="848.13" y="1823.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1,475,924 samples, 0.03%)</title><rect x="760.8" y="1797" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="763.85" y="1807.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (737,470 samples, 0.02%)</title><rect x="983.5" y="1733" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="986.47" y="1743.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_bitAndOperator_expectReturningContainerContainingMergedTextsFromCorrespondingPositionsAddedContainers_Test::TestBody (483,532 samples, 0.01%)</title><rect x="1049.2" y="1861" width="0.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1052.21" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (25,971,819 samples, 0.54%)</title><rect x="974.9" y="1813" width="6.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="977.92" y="1823.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2,084,311 samples, 0.04%)</title><rect x="425.8" y="1989" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="428.85" y="1999.5" ></text>
</g>
<g >
<title>testing::Message::GetString[abi:cxx11] (484,394 samples, 0.01%)</title><rect x="1051.9" y="1973" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1054.90" y="1983.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator+ (13,778,601 samples, 0.29%)</title><rect x="843.5" y="1845" width="3.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="846.52" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1013" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1023.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (1,475,708 samples, 0.03%)</title><rect x="786.7" y="1813" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="789.73" y="1823.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (23,288,075 samples, 0.49%)</title><rect x="114.9" y="2037" width="5.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="117.89" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="405" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (5,095,189 samples, 0.11%)</title><rect x="705.9" y="1829" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="708.88" y="1839.5" ></text>
</g>
<g >
<title>testing::internal::FlagToEnvVar (484,394 samples, 0.01%)</title><rect x="1051.9" y="1989" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1054.90" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,211,170 samples, 0.05%)</title><rect x="1046.2" y="1829" width="0.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1049.22" y="1839.5" ></text>
</g>
<g >
<title>[tests] (737,230 samples, 0.02%)</title><rect x="947.3" y="1845" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="950.28" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,458,709 samples, 0.03%)</title><rect x="889.5" y="1797" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="892.54" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (725,282 samples, 0.02%)</title><rect x="848.2" y="1813" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="851.16" y="1823.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (1,470,792 samples, 0.03%)</title><rect x="726.9" y="1829" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="729.90" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (483,206 samples, 0.01%)</title><rect x="1051.7" y="2005" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1054.66" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="549" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="559.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (740,153 samples, 0.02%)</title><rect x="757.3" y="1813" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="760.27" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (4,391,834 samples, 0.09%)</title><rect x="981.7" y="1813" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="984.68" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (1,468,209 samples, 0.03%)</title><rect x="741.0" y="1701" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="744.01" y="1711.5" ></text>
</g>
<g >
<title>testing::AssertionResult::operator bool (488,552 samples, 0.01%)</title><rect x="731.8" y="1845" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="734.85" y="1855.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (2,862,809 samples, 0.06%)</title><rect x="473.9" y="2037" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="476.86" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::ThreadContextBase::OnJoined (159,005,075 samples, 3.32%)</title><rect x="409.3" y="2037" width="39.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="412.26" y="2047.5" >__s..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (14,734,624 samples, 0.31%)</title><rect x="835.9" y="1765" width="3.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="838.90" y="1775.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (482,938 samples, 0.01%)</title><rect x="647.3" y="1893" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="650.28" y="1903.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (674,424 samples, 0.01%)</title><rect x="1049.0" y="1749" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1052.05" y="1759.5" ></text>
</g>
<g >
<title>testing::AssertionResult::operator bool (4,424,976 samples, 0.09%)</title><rect x="1049.5" y="1861" width="1.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1052.51" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,446,523 samples, 0.05%)</title><rect x="725.9" y="1829" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="728.93" y="1839.5" ></text>
</g>
<g >
<title>testing::TestSuite::~TestSuite (719,802 samples, 0.02%)</title><rect x="1056.6" y="1941" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1059.59" y="1951.5" ></text>
</g>
<g >
<title>__strlen_avx2 (11,693,913 samples, 0.24%)</title><rect x="1003.9" y="1813" width="2.9" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1006.93" y="1823.5" ></text>
</g>
<g >
<title>operator delete (737,185 samples, 0.02%)</title><rect x="982.6" y="1781" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="985.57" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="453" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (1,449,874 samples, 0.03%)</title><rect x="881.8" y="1781" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="884.81" y="1791.5" ></text>
</g>
<g >
<title>__asan::AsanActivate (480,065 samples, 0.01%)</title><rect x="610.2" y="2053" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="613.17" y="2063.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator= (113,719,446 samples, 2.37%)</title><rect x="893.7" y="1845" width="28.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="896.67" y="1855.5" >P..</text>
</g>
<g >
<title>PtrCStringVector::push_back (96,933,320 samples, 2.02%)</title><rect x="671.0" y="1845" width="23.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="674.00" y="1855.5" >P..</text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="341" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="351.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1093" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1925" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1935.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (570,893,636 samples, 11.91%)</title><rect x="237.8" y="2037" width="140.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="240.85" y="2047.5" >__memset_avx2_una..</text>
</g>
<g >
<title>memcpy@GLIBC_2.2.5 (483,206 samples, 0.01%)</title><rect x="1051.7" y="1941" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1054.66" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1861" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1871.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (737,529 samples, 0.02%)</title><rect x="973.7" y="1797" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="976.66" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (727,385 samples, 0.02%)</title><rect x="476.1" y="2005" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="479.10" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (2,203,360 samples, 0.05%)</title><rect x="973.8" y="1797" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="976.84" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (4,142,921 samples, 0.09%)</title><rect x="92.7" y="2021" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (72,457,499 samples, 1.51%)</title><rect x="894.4" y="1813" width="17.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="897.39" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (1,363,983 samples, 0.03%)</title><rect x="1048.4" y="1829" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1051.38" y="1839.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (1,465,287 samples, 0.03%)</title><rect x="929.8" y="1829" width="0.4" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="932.82" y="1839.5" ></text>
</g>
<g >
<title>testing::internal::HandleSehExceptionsInMethodIfSupported&lt;testing::Test, void&gt; (1,640,121,368 samples, 34.22%)</title><rect x="647.4" y="1877" width="403.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="650.40" y="1887.5" >testing::internal::HandleSehExceptionsInMethodIfSupport..</text>
</g>
<g >
<title>testing::internal::CmpHelperSTREQ (53,776,431 samples, 1.12%)</title><rect x="830.1" y="1845" width="13.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="833.10" y="1855.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (8,091,062 samples, 0.17%)</title><rect x="121.2" y="2037" width="2.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="124.16" y="2047.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (674,424 samples, 0.01%)</title><rect x="1049.0" y="1765" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1052.05" y="1775.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperSTREQ (738,407 samples, 0.02%)</title><rect x="1051.0" y="1861" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1053.97" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,239,182 samples, 0.03%)</title><rect x="702.1" y="1765" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="705.06" y="1775.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (8,852,089 samples, 0.18%)</title><rect x="759.6" y="1845" width="2.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="762.58" y="1855.5" ></text>
</g>
<g >
<title>testing::internal::(anonymous namespace)::UnitTestFilter::UnitTestFilter (486,120 samples, 0.01%)</title><rect x="1051.5" y="1925" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1054.54" y="1935.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (723,411 samples, 0.02%)</title><rect x="889.7" y="1765" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="892.72" y="1775.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (1,479,029 samples, 0.03%)</title><rect x="749.1" y="1813" width="0.3" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="752.06" y="1823.5" ></text>
</g>
<g >
<title>__tls_get_addr (738,053 samples, 0.02%)</title><rect x="1039.5" y="1813" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1042.50" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (681,225 samples, 0.01%)</title><rect x="699.7" y="1797" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="702.67" y="1807.5" ></text>
</g>
<g >
<title>operator new[] (3,696,006 samples, 0.08%)</title><rect x="807.9" y="1813" width="0.9" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="810.92" y="1823.5" ></text>
</g>
<g >
<title>PtrCStringVector::PtrCStringVector (90,561,014 samples, 1.89%)</title><rect x="893.7" y="1829" width="22.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="896.67" y="1839.5" >P..</text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (728,802 samples, 0.02%)</title><rect x="707.5" y="1845" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="710.48" y="1855.5" ></text>
</g>
<g >
<title>operator delete[] (3,607,494 samples, 0.08%)</title><rect x="797.0" y="1813" width="0.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="800.04" y="1823.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (736,940 samples, 0.02%)</title><rect x="1039.1" y="1797" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1042.14" y="1807.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (1,470,855 samples, 0.03%)</title><rect x="839.5" y="1765" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="842.53" y="1775.5" ></text>
</g>
<g >
<title>[[vdso]] (729,760 samples, 0.02%)</title><rect x="470.3" y="2021" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="473.28" y="2031.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (21,016,321 samples, 0.44%)</title><rect x="849.2" y="1829" width="5.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="852.23" y="1839.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (735,619 samples, 0.02%)</title><rect x="890.8" y="1813" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="893.79" y="1823.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (4,450,529 samples, 0.09%)</title><rect x="1035.9" y="1845" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1038.87" y="1855.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (10,226,319 samples, 0.21%)</title><rect x="470.5" y="2037" width="2.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="473.46" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (721,107 samples, 0.02%)</title><rect x="787.1" y="1813" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="790.10" y="1823.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (1,451,359 samples, 0.03%)</title><rect x="644.6" y="2053" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="647.57" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (5,784,109 samples, 0.12%)</title><rect x="705.7" y="1845" width="1.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="708.71" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,621,129 samples, 0.05%)</title><rect x="701.7" y="1781" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="704.72" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (4,635,721 samples, 0.10%)</title><rect x="1154.8" y="2053" width="1.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1157.79" y="2063.5" ></text>
</g>
<g >
<title>operator delete[] (3,427,922 samples, 0.07%)</title><rect x="722.8" y="1813" width="0.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="725.80" y="1823.5" ></text>
</g>
<g >
<title>testing::AssertionResult::operator bool (1,474,192 samples, 0.03%)</title><rect x="759.2" y="1845" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="762.22" y="1855.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (483,532 samples, 0.01%)</title><rect x="1049.2" y="1797" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1052.21" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="133" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="143.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (12,542,431 samples, 0.26%)</title><rect x="763.6" y="1829" width="3.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="766.57" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1973" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1983.5" ></text>
</g>
<g >
<title>operator new (1,473,619 samples, 0.03%)</title><rect x="1040.8" y="1749" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1043.77" y="1759.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (737,691 samples, 0.02%)</title><rect x="1007.0" y="1829" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1009.99" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (736,679 samples, 0.02%)</title><rect x="382.8" y="2037" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="385.83" y="2047.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (32,560,158 samples, 0.68%)</title><rect x="625.8" y="2053" width="8.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="628.77" y="2063.5" ></text>
</g>
<g >
<title>testing::TestInfo::Run (1,641,703,913 samples, 34.25%)</title><rect x="647.3" y="1925" width="404.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="650.28" y="1935.5" >testing::TestInfo::Run</text>
</g>
<g >
<title>__lsan::LsanMetadata::LsanMetadata (22,262,169 samples, 0.46%)</title><rect x="222.4" y="2037" width="5.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="225.42" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1317" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1327.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (149,960,513 samples, 3.13%)</title><rect x="54.5" y="2037" width="37.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="57.54" y="2047.5" >Ptr..</text>
</g>
<g >
<title>__asan::AsanTSDGet (740,201 samples, 0.02%)</title><rect x="748.7" y="1813" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="751.69" y="1823.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (2,179,091 samples, 0.05%)</title><rect x="797.9" y="1813" width="0.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="800.93" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (8,850,549 samples, 0.18%)</title><rect x="837.0" y="1733" width="2.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="839.99" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (622,410 samples, 0.01%)</title><rect x="707.0" y="1797" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="709.98" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (3,664,669 samples, 0.08%)</title><rect x="796.0" y="1813" width="0.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="798.96" y="1823.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (737,415 samples, 0.02%)</title><rect x="1012.6" y="1813" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1015.65" y="1823.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (736,480 samples, 0.02%)</title><rect x="946.7" y="1813" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="949.74" y="1823.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_6 (485,045 samples, 0.01%)</title><rect x="647.2" y="2053" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="650.16" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3,618,792 samples, 0.08%)</title><rect x="891.3" y="1829" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="894.33" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::DTLS_on_tls_get_addr (19,507,350 samples, 0.41%)</title><rect x="109.2" y="2021" width="4.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="112.24" y="2031.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (35,173,482 samples, 0.73%)</title><rect x="1181.3" y="2053" width="8.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1184.34" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (737,349 samples, 0.02%)</title><rect x="1041.9" y="1797" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1044.86" y="1807.5" ></text>
</g>
<g >
<title>__strlen_avx2 (712,062 samples, 0.01%)</title><rect x="823.1" y="1813" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="826.05" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="85" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="95.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (722,149 samples, 0.02%)</title><rect x="793.3" y="1813" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="796.25" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1813" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1823.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (2,901,074 samples, 0.06%)</title><rect x="817.5" y="1797" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="820.48" y="1807.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (1,958,935 samples, 0.04%)</title><rect x="724.8" y="1829" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="727.85" y="1839.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (736,378 samples, 0.02%)</title><rect x="847.8" y="1797" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="850.80" y="1807.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (730,378 samples, 0.02%)</title><rect x="847.1" y="1813" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="850.09" y="1823.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (4,425,449 samples, 0.09%)</title><rect x="11.3" y="2005" width="1.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="14.27" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (486,120 samples, 0.01%)</title><rect x="1051.5" y="1877" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1054.54" y="1887.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (1,478,871 samples, 0.03%)</title><rect x="753.6" y="1813" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="756.61" y="1823.5" ></text>
</g>
<g >
<title>testing::UnitTest::set_current_test_info (608,626 samples, 0.01%)</title><rect x="1051.1" y="1909" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1054.15" y="1919.5" ></text>
</g>
<g >
<title>[tests] (635,158 samples, 0.01%)</title><rect x="695.6" y="1845" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="698.57" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1,475,766 samples, 0.03%)</title><rect x="761.2" y="1797" width="0.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="764.21" y="1807.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (620,280 samples, 0.01%)</title><rect x="706.7" y="1781" width="0.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="709.66" y="1791.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (489,883 samples, 0.01%)</title><rect x="737.9" y="1813" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="740.88" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (5,897,901 samples, 0.12%)</title><rect x="1046.8" y="1845" width="1.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1049.76" y="1855.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (543,202,120 samples, 11.33%)</title><rect x="476.5" y="2053" width="133.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="479.45" y="2063.5" >__asan::Allocato..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (727,575 samples, 0.02%)</title><rect x="891.2" y="1829" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="894.15" y="1839.5" ></text>
</g>
<g >
<title>operator delete[] (736,567 samples, 0.02%)</title><rect x="946.9" y="1813" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="949.92" y="1823.5" ></text>
</g>
<g >
<title>testing::internal::PrettyUnitTestResultPrinter::OnTestIterationStart (485,701 samples, 0.01%)</title><rect x="1051.4" y="1925" width="0.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1054.42" y="1935.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1,475,766 samples, 0.03%)</title><rect x="761.2" y="1781" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="764.21" y="1791.5" ></text>
</g>
<g >
<title>operator new[] (732,790 samples, 0.02%)</title><rect x="915.8" y="1813" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="918.78" y="1823.5" ></text>
</g>
<g >
<title>operator delete[] (722,567 samples, 0.02%)</title><rect x="695.4" y="1813" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="698.39" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (8,114,700 samples, 0.17%)</title><rect x="759.8" y="1829" width="2.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="762.76" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (4,381,854 samples, 0.09%)</title><rect x="816.4" y="1797" width="1.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="819.40" y="1807.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (6,210,560 samples, 0.13%)</title><rect x="474.6" y="2037" width="1.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="477.57" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (692,930 samples, 0.01%)</title><rect x="700.8" y="1781" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="703.75" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (736,306 samples, 0.02%)</title><rect x="893.3" y="1765" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="896.31" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (484,394 samples, 0.01%)</title><rect x="1051.9" y="1909" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1054.90" y="1919.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (7,345,093 samples, 0.15%)</title><rect x="739.9" y="1781" width="1.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="742.93" y="1791.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperEQ&lt;unsigned long, unsigned long&gt; (17,629,253 samples, 0.37%)</title><rect x="737.4" y="1829" width="4.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="740.39" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (68,013,155 samples, 1.42%)</title><rect x="37.8" y="2021" width="16.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="40.79" y="2031.5" ></text>
</g>
<g >
<title>__asan::GetFakeStackFast (737,542 samples, 0.02%)</title><rect x="762.7" y="1829" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="765.67" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1,889,681,048 samples, 39.42%)</title><rect x="11.3" y="2053" width="465.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.27" y="2063.5" >[unknown]</text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (1,466,425 samples, 0.03%)</title><rect x="470.1" y="2037" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="473.10" y="2047.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2,454,806 samples, 0.05%)</title><rect x="40.3" y="2005" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="43.26" y="2015.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (3,694,714 samples, 0.08%)</title><rect x="750.7" y="1813" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="753.70" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (674,424 samples, 0.01%)</title><rect x="1049.0" y="1797" width="0.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1052.05" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1061" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1365" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1375.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (736,109 samples, 0.02%)</title><rect x="1048.0" y="1813" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1051.03" y="1823.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (731,817 samples, 0.02%)</title><rect x="972.0" y="1829" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="975.04" y="1839.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (19,597,908 samples, 0.41%)</title><rect x="732.0" y="1845" width="4.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="734.97" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1893" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::RunFreeHooks (5,669,762 samples, 0.12%)</title><rect x="400.4" y="2037" width="1.4" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="403.45" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (721,841 samples, 0.02%)</title><rect x="37.6" y="2005" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="40.62" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1125" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (735,298 samples, 0.02%)</title><rect x="889.5" y="1781" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="892.54" y="1791.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (5,388,896 samples, 0.11%)</title><rect x="735.5" y="1781" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="738.47" y="1791.5" ></text>
</g>
<g >
<title>tests (4,793,456,087 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tests</text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (1,471,300 samples, 0.03%)</title><rect x="730.4" y="1813" width="0.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="733.40" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (979,322 samples, 0.02%)</title><rect x="726.7" y="1829" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="729.66" y="1839.5" ></text>
</g>
<g >
<title>operator new[] (2,162,864 samples, 0.05%)</title><rect x="845.7" y="1813" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="848.66" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="325" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="335.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (3,686,037 samples, 0.08%)</title><rect x="91.5" y="2037" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="94.45" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (61,171,208 samples, 1.28%)</title><rect x="1020.1" y="1829" width="15.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1023.09" y="1839.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (24,316,278 samples, 0.51%)</title><rect x="834.3" y="1813" width="6.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="837.27" y="1823.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (2,119,578 samples, 0.04%)</title><rect x="637.0" y="2053" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="639.98" y="2063.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (737,384 samples, 0.02%)</title><rect x="982.9" y="1845" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="985.93" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (490,131 samples, 0.01%)</title><rect x="722.4" y="1813" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="725.44" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (5,164,535 samples, 0.11%)</title><rect x="760.3" y="1813" width="1.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="763.30" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (3,615,940 samples, 0.08%)</title><rect x="473.0" y="1989" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="475.97" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1,919,521 samples, 0.04%)</title><rect x="700.6" y="1797" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="703.60" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (6,210,560 samples, 0.13%)</title><rect x="474.6" y="2021" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="477.57" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="213" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="223.5" ></text>
</g>
<g >
<title>PtrCStringVector::PtrCStringVector (94,088,597 samples, 1.96%)</title><rect x="983.7" y="1829" width="23.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="986.65" y="1839.5" >P..</text>
</g>
<g >
<title>__interceptor___tls_get_addr (615,674 samples, 0.01%)</title><rect x="699.3" y="1813" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="702.35" y="1823.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (1,315,076 samples, 0.03%)</title><rect x="694.4" y="1829" width="0.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="697.38" y="1839.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1,473,423 samples, 0.03%)</title><rect x="752.3" y="1813" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="755.33" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="421" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,473,545 samples, 0.03%)</title><rect x="1045.1" y="1797" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1048.13" y="1807.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (98,719,287 samples, 2.06%)</title><rect x="848.9" y="1845" width="24.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="851.88" y="1855.5" >P..</text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (736,306 samples, 0.02%)</title><rect x="893.3" y="1733" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="896.31" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (3,649,966 samples, 0.08%)</title><rect x="1179.4" y="2053" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1182.42" y="2063.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (726,613 samples, 0.02%)</title><rect x="894.2" y="1813" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="897.21" y="1823.5" ></text>
</g>
<g >
<title>__asan::asan_delete (46,275,697 samples, 0.97%)</title><rect x="135.6" y="2037" width="11.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="138.56" y="2047.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (19,155,379 samples, 0.40%)</title><rect x="835.5" y="1797" width="4.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="838.54" y="1807.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (729,660 samples, 0.02%)</title><rect x="648.9" y="1829" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="651.91" y="1839.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (17,174,767 samples, 0.36%)</title><rect x="439.3" y="1989" width="4.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="442.32" y="1999.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (21,224,070 samples, 0.44%)</title><rect x="618.2" y="2053" width="5.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="621.19" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (7,967,209 samples, 0.17%)</title><rect x="880.9" y="1813" width="2.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="883.91" y="1823.5" ></text>
</g>
<g >
<title>operator delete[] (490,605 samples, 0.01%)</title><rect x="727.4" y="1829" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="730.38" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1077" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1087.5" ></text>
</g>
<g >
<title>testing::internal::EqHelper::Compare&lt;int, int,  (2,192,688 samples, 0.05%)</title><rect x="983.1" y="1845" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="986.11" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,928,527 samples, 0.04%)</title><rect x="702.8" y="1813" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="705.85" y="1823.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (1,341,700 samples, 0.03%)</title><rect x="1048.9" y="1813" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1051.88" y="1823.5" ></text>
</g>
<g >
<title>operator delete[] (739,534 samples, 0.02%)</title><rect x="819.3" y="1797" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="822.28" y="1807.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (43,813,811 samples, 0.91%)</title><rect x="428.5" y="1989" width="10.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="431.53" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (1,251,232 samples, 0.03%)</title><rect x="1036.7" y="1813" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1039.66" y="1823.5" ></text>
</g>
<g >
<title>operator delete[] (716,933 samples, 0.01%)</title><rect x="847.6" y="1813" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="850.63" y="1823.5" ></text>
</g>
<g >
<title>operator new[] (2,217,960 samples, 0.05%)</title><rect x="756.4" y="1829" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="759.36" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="869" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (620,613 samples, 0.01%)</title><rect x="699.8" y="1813" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="702.84" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="197" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="207.5" ></text>
</g>
<g >
<title>PtrCStringVector::size (979,889 samples, 0.02%)</title><rect x="728.0" y="1845" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="730.98" y="1855.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (739,672 samples, 0.02%)</title><rect x="758.5" y="1845" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="761.55" y="1855.5" ></text>
</g>
<g >
<title>__strlen_avx2 (726,227 samples, 0.02%)</title><rect x="873.0" y="1829" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="876.00" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="725" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="735.5" ></text>
</g>
<g >
<title>operator delete[] (1,477,411 samples, 0.03%)</title><rect x="752.7" y="1813" width="0.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="755.70" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1669" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1525" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1205" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1215.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (489,524 samples, 0.01%)</title><rect x="740.5" y="1717" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="743.53" y="1727.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest5_Test::TestBody (736,378 samples, 0.02%)</title><rect x="847.8" y="1861" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="850.80" y="1871.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (738,269 samples, 0.02%)</title><rect x="473.9" y="2005" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="476.86" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (674,424 samples, 0.01%)</title><rect x="1049.0" y="1781" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1052.05" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,144,750 samples, 0.04%)</title><rect x="755.5" y="1829" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="758.47" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (26,745,685 samples, 0.56%)</title><rect x="1056.8" y="2053" width="6.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1059.76" y="2063.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (725,857 samples, 0.02%)</title><rect x="787.6" y="1813" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="790.64" y="1823.5" ></text>
</g>
<g >
<title>testing::internal::String::CStringEquals (737,275 samples, 0.02%)</title><rect x="843.3" y="1845" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="846.34" y="1855.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (739,297 samples, 0.02%)</title><rect x="784.2" y="1813" width="0.2" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="787.19" y="1823.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (651,006 samples, 0.01%)</title><rect x="705.2" y="1765" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="708.25" y="1775.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (626,378 samples, 0.01%)</title><rect x="672.1" y="1813" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="675.06" y="1823.5" ></text>
</g>
<g >
<title>__asan::asan_delete (740,558 samples, 0.02%)</title><rect x="816.0" y="1797" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="819.04" y="1807.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (486,120 samples, 0.01%)</title><rect x="1051.5" y="1813" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1054.54" y="1823.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (729,270 samples, 0.02%)</title><rect x="974.2" y="1781" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="977.20" y="1791.5" ></text>
</g>
<g >
<title>__asan::asan_delete (1,465,565 samples, 0.03%)</title><rect x="718.7" y="1813" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="721.70" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_head (737,393 samples, 0.02%)</title><rect x="829.2" y="1781" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="832.20" y="1791.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (737,549 samples, 0.02%)</title><rect x="947.5" y="1845" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="950.46" y="1855.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (735,038 samples, 0.02%)</title><rect x="844.8" y="1813" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="847.77" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (3,249,375 samples, 0.07%)</title><rect x="701.6" y="1797" width="0.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="704.56" y="1807.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (722,492 samples, 0.02%)</title><rect x="799.6" y="1845" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="802.56" y="1855.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (718,981 samples, 0.01%)</title><rect x="882.2" y="1781" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="885.17" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (25,802,087 samples, 0.54%)</title><rect x="1039.1" y="1829" width="6.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1042.14" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strcmp.part.0 (9,586,739 samples, 0.20%)</title><rect x="767.0" y="1813" width="2.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="770.02" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,970,833 samples, 0.04%)</title><rect x="702.4" y="1781" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="705.36" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1877" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (10,843,973 samples, 0.23%)</title><rect x="401.8" y="2037" width="2.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="404.84" y="2047.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (4,450,529 samples, 0.09%)</title><rect x="1035.9" y="1829" width="1.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1038.87" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (2,181,318 samples, 0.05%)</title><rect x="773.2" y="1829" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="776.16" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (489,980 samples, 0.01%)</title><rect x="732.3" y="1829" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="735.33" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (737,527 samples, 0.02%)</title><rect x="1039.7" y="1797" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1042.68" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::StackStore::Alloc (736,164 samples, 0.02%)</title><rect x="409.1" y="2037" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="412.08" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (688,920 samples, 0.01%)</title><rect x="705.7" y="1829" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="708.71" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="677" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,992,532 samples, 0.04%)</title><rect x="701.1" y="1797" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="704.07" y="1807.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (2,211,762 samples, 0.05%)</title><rect x="837.7" y="1717" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="840.71" y="1727.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (1,479,812 samples, 0.03%)</title><rect x="815.7" y="1797" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="818.67" y="1807.5" ></text>
</g>
<g >
<title>PtrCStringVector::PtrCStringVector (32,232,540 samples, 0.67%)</title><rect x="11.3" y="2037" width="7.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="14.27" y="2047.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (3,143,555 samples, 0.07%)</title><rect x="754.3" y="1829" width="0.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="757.33" y="1839.5" ></text>
</g>
<g >
<title>__strlen_avx2 (619,689 samples, 0.01%)</title><rect x="694.7" y="1829" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="697.71" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (2,932,461 samples, 0.06%)</title><rect x="773.7" y="1829" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="776.70" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (1,475,554 samples, 0.03%)</title><rect x="839.9" y="1781" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="842.89" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1941" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (681,225 samples, 0.01%)</title><rect x="699.7" y="1781" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="702.67" y="1791.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (730,299 samples, 0.02%)</title><rect x="707.3" y="1845" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="710.30" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (738,138 samples, 0.02%)</title><rect x="1045.9" y="1829" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1048.85" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="101" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (734,612 samples, 0.02%)</title><rect x="880.7" y="1813" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="883.73" y="1823.5" ></text>
</g>
<g >
<title>__asan::FakeStack::ForEachFakeFrame (724,920 samples, 0.02%)</title><rect x="121.0" y="2037" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="123.98" y="2047.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6,499,010 samples, 0.14%)</title><rect x="703.5" y="1797" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="706.49" y="1807.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (736,880 samples, 0.02%)</title><rect x="1045.3" y="1765" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1048.31" y="1775.5" ></text>
</g>
<g >
<title>testing::internal::ForEach&lt;std::vector&lt;testing::TestSuite*, std::allocator&lt;testing::TestSuite*&gt; &gt;, void  (719,802 samples, 0.02%)</title><rect x="1056.6" y="1989" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1059.59" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1157" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1477" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1487.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (733,620 samples, 0.02%)</title><rect x="822.3" y="1813" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="825.33" y="1823.5" ></text>
</g>
<g >
<title>std::__is_constant_evaluated (737,328 samples, 0.02%)</title><rect x="1046.4" y="1813" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1049.40" y="1823.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (490,069 samples, 0.01%)</title><rect x="724.5" y="1829" width="0.1" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="727.49" y="1839.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (740,315 samples, 0.02%)</title><rect x="748.5" y="1813" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="751.51" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_Head_base (736,306 samples, 0.02%)</title><rect x="893.3" y="1717" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="896.31" y="1727.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (59,963,613 samples, 1.25%)</title><rect x="808.8" y="1829" width="14.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="811.83" y="1839.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (1,226,454 samples, 0.03%)</title><rect x="93.7" y="2021" width="0.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="96.67" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (25,847,513 samples, 0.54%)</title><rect x="699.0" y="1829" width="6.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="702.05" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1301" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1311.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::tuple&lt;true, true&gt; (11,799,347 samples, 0.25%)</title><rect x="836.6" y="1749" width="2.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="839.63" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (26,538,130 samples, 0.55%)</title><rect x="1039.1" y="1845" width="6.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="1042.14" y="1855.5" ></text>
</g>
<g >
<title>__asan_register_globals.part.0 (966,770 samples, 0.02%)</title><rect x="1052.0" y="2021" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1055.02" y="2031.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (737,432 samples, 0.02%)</title><rect x="766.1" y="1733" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="769.12" y="1743.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (1,472,514 samples, 0.03%)</title><rect x="893.1" y="1781" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="896.13" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (159,005,075 samples, 3.32%)</title><rect x="409.3" y="2005" width="39.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="412.26" y="2015.5" >[un..</text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (2,172,333 samples, 0.05%)</title><rect x="847.3" y="1845" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="850.27" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (37,679,661 samples, 0.79%)</title><rect x="972.2" y="1829" width="9.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="975.22" y="1839.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (737,384 samples, 0.02%)</title><rect x="982.9" y="1829" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="985.93" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1717" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="581" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="591.5" ></text>
</g>
<g >
<title>testing::Message::GetString[abi:cxx11] (490,981 samples, 0.01%)</title><rect x="1051.3" y="1861" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1054.30" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::InternalAlloc (481,191 samples, 0.01%)</title><rect x="1087.7" y="2053" width="0.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1090.71" y="2063.5" ></text>
</g>
<g >
<title>__asan::asan_delete (2,959,554 samples, 0.06%)</title><rect x="749.4" y="1813" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="752.42" y="1823.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (736,401 samples, 0.02%)</title><rect x="1035.1" y="1829" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1038.14" y="1839.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2,921,488 samples, 0.06%)</title><rect x="793.4" y="1813" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="796.43" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="645" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (490,242 samples, 0.01%)</title><rect x="741.5" y="1717" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="744.49" y="1727.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (651,006 samples, 0.01%)</title><rect x="705.2" y="1749" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="708.25" y="1759.5" ></text>
</g>
<g >
<title>all (4,793,456,087 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest4_Test::TestBody (17,407,582 samples, 0.36%)</title><rect x="843.5" y="1861" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="846.52" y="1871.5" ></text>
</g>
<g >
<title>testing::internal::ForEach&lt;std::vector&lt;testing::TestInfo*, std::allocator&lt;testing::TestInfo*&gt; &gt;, void  (719,802 samples, 0.02%)</title><rect x="1056.6" y="1909" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1059.59" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (729,450 samples, 0.02%)</title><rect x="845.3" y="1813" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="848.31" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (3,687,014 samples, 0.08%)</title><rect x="1047.1" y="1813" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1050.12" y="1823.5" ></text>
</g>
<g >
<title>__interceptor_strlen (735,957 samples, 0.02%)</title><rect x="967.9" y="1845" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="970.94" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (618,858 samples, 0.01%)</title><rect x="705.6" y="1845" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="708.56" y="1855.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (736,297 samples, 0.02%)</title><rect x="981.1" y="1781" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="984.13" y="1791.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest10_Test::TestBody (245,031,085 samples, 5.11%)</title><rect x="647.9" y="1861" width="60.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="650.89" y="1871.5" >PtrCSt..</text>
</g>
<g >
<title>PtrCStringVector::operator= (111,904,560 samples, 2.33%)</title><rect x="983.7" y="1845" width="27.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="986.65" y="1855.5" >P..</text>
</g>
<g >
<title>testing::AssertionSuccess (713,596 samples, 0.01%)</title><rect x="829.9" y="1845" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="832.92" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (735,619 samples, 0.02%)</title><rect x="890.8" y="1829" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="893.79" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1,473,545 samples, 0.03%)</title><rect x="1045.1" y="1813" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1048.13" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (490,909 samples, 0.01%)</title><rect x="722.3" y="1813" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="725.32" y="1823.5" ></text>
</g>
<g >
<title>__sched_yield (725,191 samples, 0.02%)</title><rect x="1180.3" y="2053" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1183.32" y="2063.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (2,198,246 samples, 0.05%)</title><rect x="707.7" y="1813" width="0.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="710.66" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1829" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1839.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (662,882 samples, 0.01%)</title><rect x="678.1" y="1829" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="681.08" y="1839.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (72,998,999 samples, 1.52%)</title><rect x="710.0" y="1845" width="18.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="713.01" y="1855.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (489,318 samples, 0.01%)</title><rect x="741.4" y="1701" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="744.37" y="1711.5" ></text>
</g>
<g >
<title>__sanitizer::internal_read (967,541 samples, 0.02%)</title><rect x="448.5" y="2037" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="451.46" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (67,370,322 samples, 1.41%)</title><rect x="409.3" y="1989" width="16.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="412.26" y="1999.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (981,781 samples, 0.02%)</title><rect x="724.0" y="1813" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="727.00" y="1823.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (15,287,469 samples, 0.32%)</title><rect x="873.9" y="1845" width="3.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="876.90" y="1855.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (736,456 samples, 0.02%)</title><rect x="1046.6" y="1813" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1049.58" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1,476,418 samples, 0.03%)</title><rect x="1041.1" y="1797" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1044.14" y="1807.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (2,942,766 samples, 0.06%)</title><rect x="786.0" y="1813" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="789.01" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="469" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="479.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (736,467 samples, 0.02%)</title><rect x="882.5" y="1765" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="885.52" y="1775.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (1,462,660 samples, 0.03%)</title><rect x="983.3" y="1797" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="986.29" y="1807.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (1,449,874 samples, 0.03%)</title><rect x="881.8" y="1765" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="884.81" y="1775.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,615,940 samples, 0.08%)</title><rect x="473.0" y="1973" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="475.97" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2,150,528 samples, 0.04%)</title><rect x="882.3" y="1797" width="0.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="885.34" y="1807.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_M_head (737,476 samples, 0.02%)</title><rect x="761.4" y="1749" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="764.39" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (1,462,660 samples, 0.03%)</title><rect x="983.3" y="1749" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="986.29" y="1759.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (8,831,213 samples, 0.18%)</title><rect x="1037.0" y="1845" width="2.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1039.97" y="1855.5" ></text>
</g>
<g >
<title>__asan::asan_delete (739,642 samples, 0.02%)</title><rect x="757.6" y="1813" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="760.64" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="613" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="623.5" ></text>
</g>
<g >
<title>testing::TestSuite::~TestSuite (719,802 samples, 0.02%)</title><rect x="1056.6" y="1925" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1059.59" y="1935.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (4,427,556 samples, 0.09%)</title><rect x="828.8" y="1797" width="1.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="831.83" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (739,764 samples, 0.02%)</title><rect x="789.8" y="1829" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="792.81" y="1839.5" ></text>
</g>
<g >
<title>PtrCStringVector::PtrCStringVector (92,586,856 samples, 1.93%)</title><rect x="648.2" y="1845" width="22.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="651.20" y="1855.5" >P..</text>
</g>
<g >
<title>__sanitizer::internal_munmap (4,723,474 samples, 0.10%)</title><rect x="1178.3" y="2053" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1181.26" y="2063.5" ></text>
</g>
<g >
<title>std::for_each&lt;__gnu_cxx::__normal_iterator&lt;testing::TestSuite* const*, std::vector&lt;testing::TestSuite*, std::allocator&lt;testing::TestSuite*&gt; &gt; &gt;, void  (719,802 samples, 0.02%)</title><rect x="1056.6" y="1973" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1059.59" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer_free_hook (2,216,209 samples, 0.05%)</title><rect x="461.4" y="2037" width="0.6" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="464.41" y="2047.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (1,468,908 samples, 0.03%)</title><rect x="930.2" y="1829" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="933.18" y="1839.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (739,799 samples, 0.02%)</title><rect x="748.9" y="1813" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="751.88" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_M_head (737,384 samples, 0.02%)</title><rect x="982.9" y="1749" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="985.93" y="1759.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (738,692 samples, 0.02%)</title><rect x="788.2" y="1829" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="791.18" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,960,756 samples, 0.06%)</title><rect x="818.2" y="1797" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="821.19" y="1807.5" ></text>
</g>
<g >
<title>__asan::asan_delete (490,582 samples, 0.01%)</title><rect x="729.6" y="1813" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="732.55" y="1823.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (9,593,097 samples, 0.20%)</title><rect x="764.3" y="1813" width="2.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="767.30" y="1823.5" ></text>
</g>
<g >
<title>__lsan::PointsIntoChunk (2,067,621 samples, 0.04%)</title><rect x="1052.6" y="2053" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1055.61" y="2063.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (3,585,568 samples, 0.07%)</title><rect x="1055.7" y="2053" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1058.70" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,445,937 samples, 0.03%)</title><rect x="974.6" y="1813" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="977.57" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1429" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1439.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_head (737,476 samples, 0.02%)</title><rect x="761.4" y="1765" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="764.39" y="1775.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (30,763,340 samples, 0.64%)</title><rect x="790.9" y="1829" width="7.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="793.89" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (1,475,703 samples, 0.03%)</title><rect x="763.2" y="1829" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="766.21" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (737,384 samples, 0.02%)</title><rect x="982.9" y="1813" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="985.93" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (721,841 samples, 0.02%)</title><rect x="37.6" y="2021" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="40.62" y="2031.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (739,957 samples, 0.02%)</title><rect x="799.4" y="1845" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="802.38" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (59,154,501 samples, 1.23%)</title><rect x="930.5" y="1829" width="14.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="933.55" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="917" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="927.5" ></text>
</g>
<g >
<title>[unknown] (74,785,691 samples, 1.56%)</title><rect x="19.2" y="2021" width="18.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.21" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="533" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="543.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (5,879,790 samples, 0.12%)</title><rect x="824.0" y="1829" width="1.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="826.95" y="1839.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (5,635,956 samples, 0.12%)</title><rect x="426.4" y="1989" width="1.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="429.36" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="149" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="159.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (737,349 samples, 0.02%)</title><rect x="1041.9" y="1749" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1044.86" y="1759.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (727,385 samples, 0.02%)</title><rect x="476.1" y="2037" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="479.10" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (723,411 samples, 0.02%)</title><rect x="889.7" y="1781" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="892.72" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (736,985 samples, 0.02%)</title><rect x="1049.3" y="1861" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1052.33" y="1871.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (26,334,044 samples, 0.55%)</title><rect x="671.6" y="1829" width="6.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="674.60" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (680,926 samples, 0.01%)</title><rect x="695.9" y="1845" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="698.89" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (26,472,212 samples, 0.55%)</title><rect x="699.0" y="1845" width="6.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="702.05" y="1855.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (15,902,187 samples, 0.33%)</title><rect x="968.1" y="1845" width="3.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="971.12" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1029" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1039.5" ></text>
</g>
<g >
<title>operator new[] (2,216,635 samples, 0.05%)</title><rect x="753.1" y="1813" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="756.06" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (980,289 samples, 0.02%)</title><rect x="729.7" y="1813" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="732.68" y="1823.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (737,398 samples, 0.02%)</title><rect x="1012.5" y="1813" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1015.47" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (51,644,665 samples, 1.08%)</title><rect x="448.7" y="2037" width="12.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="451.70" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (32,232,540 samples, 0.67%)</title><rect x="11.3" y="2021" width="7.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.27" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (651,006 samples, 0.01%)</title><rect x="705.2" y="1813" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="708.25" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (717,403 samples, 0.01%)</title><rect x="889.9" y="1813" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="892.90" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (1,465,703 samples, 0.03%)</title><rect x="774.4" y="1829" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="777.42" y="1839.5" ></text>
</g>
<g >
<title>__lsan::ForEachChunk (22,323,388 samples, 0.47%)</title><rect x="169.7" y="2037" width="5.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="172.73" y="2047.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (28,702,812 samples, 0.60%)</title><rect x="637.5" y="2053" width="7.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="640.50" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (5,830,210 samples, 0.12%)</title><rect x="981.5" y="1845" width="1.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="984.49" y="1855.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,145,586 samples, 0.23%)</title><rect x="94.3" y="2021" width="2.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="97.34" y="2031.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperEQ&lt;unsigned long, int&gt; (3,683,843 samples, 0.08%)</title><rect x="892.6" y="1829" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="895.58" y="1839.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (676,570 samples, 0.01%)</title><rect x="1048.7" y="1829" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1051.72" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (22,836,392 samples, 0.48%)</title><rect x="922.9" y="1813" width="5.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="925.93" y="1823.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (737,484 samples, 0.02%)</title><rect x="762.5" y="1829" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="765.48" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1,970,833 samples, 0.04%)</title><rect x="702.4" y="1797" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="705.36" y="1807.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (13,008,141 samples, 0.27%)</title><rect x="633.8" y="2053" width="3.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="636.78" y="2063.5" ></text>
</g>
<g >
<title>testing::internal::SplitString (483,031 samples, 0.01%)</title><rect x="1051.8" y="1957" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1054.78" y="1967.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::~UnitTestImpl (719,802 samples, 0.02%)</title><rect x="1056.6" y="2005" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1059.59" y="2015.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::__uniq_ptr_impl (4,894,441 samples, 0.10%)</title><rect x="740.4" y="1749" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="743.41" y="1759.5" ></text>
</g>
<g >
<title>operator new[] (1,461,716 samples, 0.03%)</title><rect x="790.5" y="1829" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="793.53" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="485" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="495.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="885" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="895.5" ></text>
</g>
<g >
<title>__strlen_avx2 (489,915 samples, 0.01%)</title><rect x="727.3" y="1829" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="730.26" y="1839.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (1,462,660 samples, 0.03%)</title><rect x="983.3" y="1765" width="0.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="986.29" y="1775.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (739,514 samples, 0.02%)</title><rect x="757.1" y="1813" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="760.09" y="1823.5" ></text>
</g>
<g >
<title>__asan::asan_delete (3,696,575 samples, 0.08%)</title><rect x="795.0" y="1813" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="798.05" y="1823.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (484,394 samples, 0.01%)</title><rect x="1051.9" y="2021" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1054.90" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (737,291 samples, 0.02%)</title><rect x="1046.0" y="1829" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1049.04" y="1839.5" ></text>
</g>
<g >
<title>testing::internal::TestEventRepeater::OnTestIterationStart (485,701 samples, 0.01%)</title><rect x="1051.4" y="1941" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1054.42" y="1951.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (7,836,578 samples, 0.16%)</title><rect x="734.9" y="1797" width="1.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="737.86" y="1807.5" ></text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (5,180,947 samples, 0.11%)</title><rect x="756.9" y="1845" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="759.91" y="1855.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (737,252 samples, 0.02%)</title><rect x="828.7" y="1797" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="831.65" y="1807.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (740,580 samples, 0.02%)</title><rect x="776.4" y="1813" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="779.40" y="1823.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (738,205 samples, 0.02%)</title><rect x="766.3" y="1733" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="769.30" y="1743.5" ></text>
</g>
<g >
<title>__interceptor_strcmp.part.0 (11,777,073 samples, 0.25%)</title><rect x="840.3" y="1813" width="2.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="843.26" y="1823.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (727,385 samples, 0.02%)</title><rect x="476.1" y="1973" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="479.10" y="1983.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (10,020,983 samples, 0.21%)</title><rect x="37.8" y="2005" width="2.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="40.79" y="2015.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (981,427 samples, 0.02%)</title><rect x="717.9" y="1813" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="720.85" y="1823.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (629,946 samples, 0.01%)</title><rect x="1036.3" y="1813" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1039.34" y="1823.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I__ZN7testing15AssertionResultC2ERKS0_ (484,394 samples, 0.01%)</title><rect x="1051.9" y="2037" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1054.90" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="373" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="383.5" ></text>
</g>
<g >
<title>testing::internal::HandleExceptionsInMethodIfSupported&lt;testing::internal::UnitTestImpl, bool&gt; (709,841 samples, 0.01%)</title><rect x="476.3" y="2037" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="479.28" y="2047.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_head (2,940,105 samples, 0.06%)</title><rect x="736.1" y="1765" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="739.07" y="1775.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (2,449,260 samples, 0.05%)</title><rect x="725.3" y="1829" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="728.33" y="1839.5" ></text>
</g>
<g >
<title>testing::internal::PrettyUnitTestResultPrinter::OnTestEnd (490,981 samples, 0.01%)</title><rect x="1051.3" y="1893" width="0.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1054.30" y="1903.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (1,473,229 samples, 0.03%)</title><rect x="946.4" y="1813" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="949.37" y="1823.5" ></text>
</g>
<g >
<title>operator new[] (1,469,845 samples, 0.03%)</title><rect x="723.6" y="1813" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="726.64" y="1823.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (2,185,672 samples, 0.05%)</title><rect x="846.2" y="1829" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="849.19" y="1839.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::FilterTests (486,120 samples, 0.01%)</title><rect x="1051.5" y="1941" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1054.54" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,307,396 samples, 0.03%)</title><rect x="706.8" y="1813" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="709.82" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::push_back (484,394 samples, 0.01%)</title><rect x="1051.9" y="1925" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1054.90" y="1935.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (1,446,312 samples, 0.03%)</title><rect x="982.0" y="1781" width="0.4" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="985.04" y="1791.5" ></text>
</g>
<g >
<title>__tls_get_addr (732,213 samples, 0.02%)</title><rect x="881.6" y="1781" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="884.63" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (16,054,015 samples, 0.33%)</title><rect x="1063.3" y="2053" width="4.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1066.35" y="2063.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8,106,571 samples, 0.17%)</title><rect x="1043.1" y="1797" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1046.13" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (3,922,652 samples, 0.08%)</title><rect x="721.3" y="1813" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="724.35" y="1823.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (651,006 samples, 0.01%)</title><rect x="705.2" y="1733" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="708.25" y="1743.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (615,931 samples, 0.01%)</title><rect x="696.2" y="1845" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="699.24" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (22,102,479 samples, 0.46%)</title><rect x="1012.8" y="1813" width="5.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1015.83" y="1823.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (736,645 samples, 0.02%)</title><rect x="1019.5" y="1829" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1022.54" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (739,616 samples, 0.02%)</title><rect x="796.9" y="1813" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="799.86" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="261" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="271.5" ></text>
</g>
<g >
<title>testing::internal::EqHelper::Compare&lt;unsigned long, unsigned long,  (20,078,426 samples, 0.42%)</title><rect x="736.8" y="1845" width="4.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="739.79" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (605,779 samples, 0.01%)</title><rect x="703.2" y="1797" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="706.18" y="1807.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (483,532 samples, 0.01%)</title><rect x="1049.2" y="1813" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1052.21" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (736,378 samples, 0.02%)</title><rect x="847.8" y="1829" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="850.80" y="1839.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (2,212,518 samples, 0.05%)</title><rect x="945.1" y="1829" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="948.11" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="357" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (70,097,968 samples, 1.46%)</title><rect x="383.2" y="2037" width="17.2" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="386.19" y="2047.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (1,477,908 samples, 0.03%)</title><rect x="823.6" y="1829" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="826.59" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (736,942 samples, 0.02%)</title><rect x="974.4" y="1813" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="977.38" y="1823.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (24,154,699 samples, 0.50%)</title><rect x="883.4" y="1797" width="6.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="886.41" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (4,422,140 samples, 0.09%)</title><rect x="1040.0" y="1781" width="1.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1043.05" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="837" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="847.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (615,943 samples, 0.01%)</title><rect x="706.5" y="1781" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="709.51" y="1791.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (490,979 samples, 0.01%)</title><rect x="719.1" y="1813" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="722.06" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (16,942,374 samples, 0.35%)</title><rect x="835.7" y="1781" width="4.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="838.72" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1637" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1647.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (11,483,936 samples, 0.24%)</title><rect x="610.3" y="2053" width="2.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="613.29" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (2,188,426 samples, 0.05%)</title><rect x="889.4" y="1813" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="892.36" y="1823.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (1,968,593 samples, 0.04%)</title><rect x="758.7" y="1845" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="761.73" y="1855.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (728,745 samples, 0.02%)</title><rect x="695.0" y="1813" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="698.04" y="1823.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (727,635 samples, 0.02%)</title><rect x="816.2" y="1797" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="819.22" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (740,027 samples, 0.02%)</title><rect x="818.9" y="1797" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="821.92" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="53" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="63.5" ></text>
</g>
<g >
<title>operator new[] (4,374,503 samples, 0.09%)</title><rect x="819.5" y="1797" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="822.46" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (3,629,729 samples, 0.08%)</title><rect x="881.5" y="1797" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="884.45" y="1807.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (10,288,219 samples, 0.21%)</title><rect x="734.3" y="1813" width="2.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="737.26" y="1823.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator&amp; (2,153,071 samples, 0.04%)</title><rect x="848.0" y="1845" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="850.98" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (62,988,525 samples, 1.31%)</title><rect x="678.9" y="1829" width="15.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="681.88" y="1839.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (1,474,328 samples, 0.03%)</title><rect x="839.2" y="1733" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="842.17" y="1743.5" ></text>
</g>
<g >
<title>__interceptor_strcpy (980,950 samples, 0.02%)</title><rect x="731.0" y="1845" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="734.00" y="1855.5" ></text>
</g>
<g >
<title>operator delete (737,260 samples, 0.02%)</title><rect x="1047.9" y="1781" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1050.85" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (70,431,062 samples, 1.47%)</title><rect x="649.1" y="1829" width="17.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="652.09" y="1839.5" ></text>
</g>
<g >
<title>__tls_get_addr (737,674 samples, 0.02%)</title><rect x="833.5" y="1829" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="836.54" y="1839.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperEQ&lt;unsigned long, unsigned long&gt; (483,532 samples, 0.01%)</title><rect x="1049.2" y="1829" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1052.21" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (7,812,432 samples, 0.16%)</title><rect x="703.3" y="1813" width="1.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="706.32" y="1823.5" ></text>
</g>
<g >
<title>testing::AssertionResult::~AssertionResult (2,048,531 samples, 0.04%)</title><rect x="1048.2" y="1845" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1051.21" y="1855.5" ></text>
</g>
<g >
<title>__ubsan::checkDynamicType (483,362 samples, 0.01%)</title><rect x="1180.5" y="2053" width="0.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1183.50" y="2063.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (17,637,543 samples, 0.37%)</title><rect x="732.4" y="1829" width="4.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="735.45" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (3,695,571 samples, 0.08%)</title><rect x="804.8" y="1813" width="0.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="807.82" y="1823.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (1,475,380 samples, 0.03%)</title><rect x="833.7" y="1829" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="836.72" y="1839.5" ></text>
</g>
<g >
<title>main (1,642,675,734 samples, 34.27%)</title><rect x="647.3" y="2037" width="404.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="650.28" y="2047.5" >main</text>
</g>
<g >
<title>__asan_stack_malloc_1 (486,039 samples, 0.01%)</title><rect x="644.9" y="2053" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="647.93" y="2063.5" ></text>
</g>
<g >
<title>PtrCStringVector::PtrCStringVector (36,221,600 samples, 0.76%)</title><rect x="799.9" y="1829" width="8.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="802.91" y="1839.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (9,559,309 samples, 0.20%)</title><rect x="446.1" y="1989" width="2.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="449.05" y="1999.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (3,615,940 samples, 0.08%)</title><rect x="473.0" y="2005" width="0.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="475.97" y="2015.5" ></text>
</g>
<g >
<title>__asan::asan_delete (733,607 samples, 0.02%)</title><rect x="891.5" y="1781" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="894.51" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (39,397,617 samples, 0.82%)</title><rect x="880.4" y="1845" width="9.7" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="883.38" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="165" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="175.5" ></text>
</g>
<g >
<title>testing::TestSuite::Run (1,641,703,913 samples, 34.25%)</title><rect x="647.3" y="1941" width="404.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="650.28" y="1951.5" >testing::TestSuite::Run</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (734,230 samples, 0.02%)</title><rect x="892.0" y="1797" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="895.04" y="1807.5" ></text>
</g>
<g >
<title>RUN_ALL_TESTS (1,642,675,734 samples, 34.27%)</title><rect x="647.3" y="2021" width="404.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="650.28" y="2031.5" >RUN_ALL_TESTS</text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (731,562 samples, 0.02%)</title><rect x="873.7" y="1813" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="876.72" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (54,800,868 samples, 1.14%)</title><rect x="40.9" y="2005" width="13.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="43.86" y="2015.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (732,128 samples, 0.02%)</title><rect x="880.6" y="1813" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="883.55" y="1823.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (25,053,639 samples, 0.52%)</title><rect x="834.1" y="1829" width="6.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="837.09" y="1839.5" ></text>
</g>
<g >
<title>testing::AssertionResult::operator bool (737,413 samples, 0.02%)</title><rect x="892.2" y="1845" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="895.22" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2,185,667 samples, 0.05%)</title><rect x="445.5" y="1989" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="448.51" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (17,374,782 samples, 0.36%)</title><rect x="849.2" y="1813" width="4.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="852.23" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (2,218,088 samples, 0.05%)</title><rect x="807.4" y="1813" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="810.37" y="1823.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator[] (737,599 samples, 0.02%)</title><rect x="743.4" y="1845" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="746.37" y="1855.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (727,385 samples, 0.02%)</title><rect x="476.1" y="2021" width="0.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="479.10" y="2031.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (8,341,374 samples, 0.17%)</title><rect x="468.0" y="2037" width="2.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="471.04" y="2047.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (16,341,015 samples, 0.34%)</title><rect x="1007.2" y="1829" width="4.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1010.17" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (733,164 samples, 0.02%)</title><rect x="881.8" y="1749" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="884.81" y="1759.5" ></text>
</g>
<g >
<title>testing::internal::EqHelper::Compare&lt;unsigned long, int,  (3,683,843 samples, 0.08%)</title><rect x="892.6" y="1845" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="895.58" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1685" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1509" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1189" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1199.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (740,435 samples, 0.02%)</title><rect x="776.8" y="1813" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="779.77" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (5,093,425 samples, 0.11%)</title><rect x="981.7" y="1829" width="1.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="984.68" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="709" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="719.5" ></text>
</g>
<g >
<title>[unknown] (709,841 samples, 0.01%)</title><rect x="476.3" y="2021" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="479.28" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1,367,224 samples, 0.03%)</title><rect x="699.5" y="1813" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="702.50" y="1823.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (23,773,229 samples, 0.50%)</title><rect x="975.1" y="1797" width="5.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="978.10" y="1807.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (1,461,693 samples, 0.03%)</title><rect x="783.7" y="1813" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="786.65" y="1823.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::AddTestInfo (483,031 samples, 0.01%)</title><rect x="1051.8" y="1989" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1054.78" y="1999.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (1,236,223 samples, 0.03%)</title><rect x="706.5" y="1797" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="709.51" y="1807.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (726,108 samples, 0.02%)</title><rect x="981.3" y="1813" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="984.31" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (74,816,187 samples, 1.56%)</title><rect x="854.6" y="1829" width="18.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="857.58" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (74,785,691 samples, 1.56%)</title><rect x="19.2" y="2005" width="18.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="22.21" y="2015.5" ></text>
</g>
<g >
<title>_sub_I_00099_1 (2,418,646 samples, 0.05%)</title><rect x="1052.0" y="2037" width="0.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1055.02" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (3,857,877 samples, 0.08%)</title><rect x="1088.0" y="2053" width="1.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1091.01" y="2063.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (737,552 samples, 0.02%)</title><rect x="763.0" y="1829" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="766.03" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memset (964,192 samples, 0.02%)</title><rect x="1156.3" y="2053" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1159.30" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1413" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1423.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2,213,988 samples, 0.05%)</title><rect x="829.4" y="1781" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="832.38" y="1791.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_head (737,384 samples, 0.02%)</title><rect x="982.9" y="1765" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="985.93" y="1775.5" ></text>
</g>
<g >
<title>[tests] (980,615 samples, 0.02%)</title><rect x="730.8" y="1845" width="0.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="733.76" y="1855.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (737,600 samples, 0.02%)</title><rect x="762.8" y="1829" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="765.85" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1845" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (2,155,381 samples, 0.04%)</title><rect x="891.3" y="1813" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="894.33" y="1823.5" ></text>
</g>
<g >
<title>__strlen_avx2 (14,464,140 samples, 0.30%)</title><rect x="912.2" y="1813" width="3.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="915.22" y="1823.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (6,364,778 samples, 0.13%)</title><rect x="740.2" y="1765" width="1.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="743.17" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Deallocate (16,849,029 samples, 0.35%)</title><rect x="378.7" y="2037" width="4.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="381.68" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,191,573 samples, 0.05%)</title><rect x="873.2" y="1813" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="876.18" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="629" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (5,160,224 samples, 0.11%)</title><rect x="1039.9" y="1797" width="1.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1042.87" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (483,206 samples, 0.01%)</title><rect x="1051.7" y="1957" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1054.66" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator+= (484,394 samples, 0.01%)</title><rect x="1051.9" y="1941" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="1054.90" y="1951.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (979,875 samples, 0.02%)</title><rect x="98.0" y="2021" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="100.97" y="2031.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (737,476 samples, 0.02%)</title><rect x="1041.7" y="1749" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1044.68" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (729,717 samples, 0.02%)</title><rect x="889.4" y="1797" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="892.36" y="1807.5" ></text>
</g>
<g >
<title>testing::internal::StreamableToString&lt;long&gt; (490,981 samples, 0.01%)</title><rect x="1051.3" y="1877" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1054.30" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::internal_madvise (489,670 samples, 0.01%)</title><rect x="1156.2" y="2053" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1159.17" y="2063.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (98,172,591 samples, 2.05%)</title><rect x="921.8" y="1845" width="24.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="924.84" y="1855.5" >P..</text>
</g>
<g >
<title>PtrCStringVector::~PtrCStringVector (32,238,139 samples, 0.67%)</title><rect x="790.9" y="1845" width="7.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="793.89" y="1855.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (2,888,041 samples, 0.06%)</title><rect x="694.9" y="1829" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="697.86" y="1839.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (740,142 samples, 0.02%)</title><rect x="790.2" y="1829" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="793.17" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="757" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="767.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (626,851 samples, 0.01%)</title><rect x="705.1" y="1797" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="708.09" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (708,429 samples, 0.01%)</title><rect x="378.2" y="2021" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="381.21" y="2031.5" ></text>
</g>
<g >
<title>__tls_get_addr (732,403 samples, 0.02%)</title><rect x="890.6" y="1829" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="893.61" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1557" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1237" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1247.5" ></text>
</g>
<g >
<title>PtrCStringVector::reserve (38,784,477 samples, 0.81%)</title><rect x="811.0" y="1813" width="9.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="813.99" y="1823.5" ></text>
</g>
<g >
<title>testing::internal::UnitTestImpl::set_current_test_info (608,626 samples, 0.01%)</title><rect x="1051.1" y="1893" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1054.15" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1333" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="309" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="319.5" ></text>
</g>
<g >
<title>_dl_relocate_object (7,750,550 samples, 0.16%)</title><rect x="468.2" y="2005" width="1.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="471.19" y="2015.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (739,009 samples, 0.02%)</title><rect x="766.8" y="1813" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="769.84" y="1823.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (739,020 samples, 0.02%)</title><rect x="783.5" y="1813" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="786.47" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (701,591 samples, 0.01%)</title><rect x="982.8" y="1797" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="985.76" y="1807.5" ></text>
</g>
<g >
<title>__asan::CanPoisonMemory (9,543,986 samples, 0.20%)</title><rect x="623.4" y="2053" width="2.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="626.42" y="2063.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1,471,118 samples, 0.03%)</title><rect x="734.5" y="1797" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="737.50" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;testing::TestProperty, std::allocator&lt;testing::TestProperty&gt; &gt;::~vector (719,802 samples, 0.02%)</title><rect x="1056.6" y="1845" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1059.59" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1797" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1807.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (736,738 samples, 0.02%)</title><rect x="922.8" y="1813" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="925.75" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (684,986 samples, 0.01%)</title><rect x="706.8" y="1797" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="709.82" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (10,322,679 samples, 0.22%)</title><rect x="1039.7" y="1813" width="2.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1042.68" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (7,998,308 samples, 0.17%)</title><rect x="443.5" y="1989" width="2.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="446.55" y="1999.5" ></text>
</g>
<g >
<title>PtrCStringVectorTester_antytest9_Test::TestBody (266,338,257 samples, 5.56%)</title><rect x="983.7" y="1861" width="65.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="986.65" y="1871.5" >PtrCStr..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (1,478,353 samples, 0.03%)</title><rect x="807.0" y="1813" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="810.01" y="1823.5" ></text>
</g>
<g >
<title>__strlen_avx2 (722,983 samples, 0.02%)</title><rect x="945.7" y="1829" width="0.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="948.65" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,474,788 samples, 0.03%)</title><rect x="1041.5" y="1765" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1044.50" y="1775.5" ></text>
</g>
<g >
<title>[tests] (1,479,043 samples, 0.03%)</title><rect x="787.8" y="1829" width="0.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="790.81" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (1,293,984 samples, 0.03%)</title><rect x="678.4" y="1829" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="681.41" y="1839.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (2,918,594 samples, 0.06%)</title><rect x="982.0" y="1797" width="0.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="985.04" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="501" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="511.5" ></text>
</g>
<g >
<title>operator new[] (719,697 samples, 0.02%)</title><rect x="854.2" y="1813" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="857.23" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (3,644,954 samples, 0.08%)</title><rect x="973.5" y="1813" width="0.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="976.49" y="1823.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (1,456,648 samples, 0.03%)</title><rect x="846.9" y="1829" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="849.91" y="1839.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (5,156,859 samples, 0.11%)</title><rect x="946.0" y="1829" width="1.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="949.01" y="1839.5" ></text>
</g>
<g >
<title>testing::internal::CmpHelperEQ&lt;int, int&gt; (2,192,688 samples, 0.05%)</title><rect x="983.1" y="1829" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="986.11" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,862,809 samples, 0.06%)</title><rect x="473.9" y="2021" width="0.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="476.86" y="2031.5" ></text>
</g>
<g >
<title>[libasan.so.8.0.0] (490,052 samples, 0.01%)</title><rect x="717.7" y="1813" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="720.73" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (736,744 samples, 0.02%)</title><rect x="1040.6" y="1749" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1043.59" y="1759.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tuple_impl (674,424 samples, 0.01%)</title><rect x="1049.0" y="1733" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1052.05" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (701,591 samples, 0.01%)</title><rect x="982.8" y="1813" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="985.76" y="1823.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::unique_ptr&lt;std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt; (1,465,443 samples, 0.03%)</title><rect x="707.8" y="1797" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="710.84" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1045" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1381" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1391.5" ></text>
</g>
<g >
<title>operator new[] (1,470,456 samples, 0.03%)</title><rect x="787.3" y="1813" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="790.27" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strlen (76,509,077 samples, 1.60%)</title><rect x="985.1" y="1813" width="18.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="988.10" y="1823.5" ></text>
</g>
<g >
<title>std::is_constant_evaluated (676,135 samples, 0.01%)</title><rect x="707.1" y="1845" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="710.14" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (709,841 samples, 0.01%)</title><rect x="476.3" y="2005" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="479.28" y="2015.5" ></text>
</g>
<g >
<title>PtrCStringVector::push_back (1,437,350 samples, 0.03%)</title><rect x="848.0" y="1829" width="0.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="850.98" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="1445" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1455.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (2,208,150 samples, 0.05%)</title><rect x="92.8" y="37" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="95.78" y="47.5" ></text>
</g>
<g >
<title>__interceptor_memset (626,851 samples, 0.01%)</title><rect x="705.1" y="1781" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="708.09" y="1791.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (6,555,528 samples, 0.14%)</title><rect x="820.7" y="1813" width="1.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="823.72" y="1823.5" ></text>
</g>
<g >
<title>__strcpy_avx2 (10,795,394 samples, 0.23%)</title><rect x="696.4" y="1845" width="2.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="699.39" y="1855.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator[] (1,475,658 samples, 0.03%)</title><rect x="647.4" y="1861" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="650.40" y="1871.5" ></text>
</g>
<g >
<title>__interceptor_strcpy (724,607 samples, 0.02%)</title><rect x="820.5" y="1813" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="823.54" y="1823.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (738,272 samples, 0.02%)</title><rect x="758.4" y="1845" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="761.37" y="1855.5" ></text>
</g>
<g >
<title>__interceptor_strcpy (678,094 samples, 0.01%)</title><rect x="695.7" y="1845" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="698.73" y="1855.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (740,966 samples, 0.02%)</title><rect x="757.5" y="1813" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="760.46" y="1823.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, false&gt;::_M_head (1,476,692 samples, 0.03%)</title><rect x="829.6" y="1749" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="832.56" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (2,698,329 samples, 0.06%)</title><rect x="92.7" y="997" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="95.65" y="1007.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (490,565 samples, 0.01%)</title><rect x="718.6" y="1813" width="0.1" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="721.58" y="1823.5" ></text>
</g>
<g >
<title>operator new[] (736,166 samples, 0.02%)</title><rect x="945.8" y="1829" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="948.83" y="1839.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (1,478,465 samples, 0.03%)</title><rect x="804.5" y="1813" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="807.46" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (39,502,736 samples, 0.82%)</title><rect x="1078.0" y="2053" width="9.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1080.98" y="2063.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~unique_ptr (11,030,613 samples, 0.23%)</title><rect x="827.2" y="1829" width="2.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="830.21" y="1839.5" ></text>
</g>
<g >
<title>__interceptor___tls_get_addr (3,617,116 samples, 0.08%)</title><rect x="97.1" y="2021" width="0.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="100.08" y="2031.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (737,384 samples, 0.02%)</title><rect x="982.9" y="1781" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="985.93" y="1791.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::default_delete&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true, true&gt;::__uniq_ptr_impl (5,165,838 samples, 0.11%)</title><rect x="765.2" y="1781" width="1.3" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="768.21" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (618,858 samples, 0.01%)</title><rect x="705.6" y="1829" width="0.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="708.56" y="1839.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (733,607 samples, 0.02%)</title><rect x="108.9" y="2021" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="111.88" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (616,123 samples, 0.01%)</title><rect x="700.5" y="1797" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="703.45" y="1807.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (486,120 samples, 0.01%)</title><rect x="1051.5" y="1829" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1054.54" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strcpy.part.0 (4,902,365 samples, 0.10%)</title><rect x="719.2" y="1813" width="1.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="722.18" y="1823.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (966,237 samples, 0.02%)</title><rect x="1051.7" y="2021" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1054.66" y="2031.5" ></text>
</g>
<g >
<title>testing::AssertionResult::AssertionResult&lt;bool&gt; (1,472,514 samples, 0.03%)</title><rect x="893.1" y="1797" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="896.13" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (735,855 samples, 0.02%)</title><rect x="981.9" y="1797" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="984.86" y="1807.5" ></text>
</g>
<g >
<title>PtrCStringVector::operator= (1,456,648 samples, 0.03%)</title><rect x="846.9" y="1845" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="849.91" y="1855.5" ></text>
</g>
<g >
<title>__strlen_avx2 (2,211,961 samples, 0.05%)</title><rect x="1035.3" y="1829" width="0.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1038.33" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (723,321 samples, 0.02%)</title><rect x="845.0" y="1813" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="847.95" y="1823.5" ></text>
</g>
<g >
<title>dl_main (8,341,374 samples, 0.17%)</title><rect x="468.0" y="2021" width="2.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="471.04" y="2031.5" ></text>
</g>
<g >
<title>__interceptor_strlen.part.0 (712,068 samples, 0.01%)</title><rect x="848.0" y="1813" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="850.98" y="1823.5" ></text>
</g>
<g >
<title>testing::AssertionSuccess (13,713,145 samples, 0.29%)</title><rect x="738.4" y="1813" width="3.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="741.36" y="1823.5" ></text>
</g>
<g >
<title>__strlen_avx2 (5,155,193 samples, 0.11%)</title><rect x="928.6" y="1813" width="1.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="931.55" y="1823.5" ></text>
</g>
<g >
<title>testing::internal::MakeAndRegisterTestInfo (483,031 samples, 0.01%)</title><rect x="1051.8" y="2005" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1054.78" y="2015.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (661,253 samples, 0.01%)</title><rect x="678.2" y="1829" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="681.24" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Recycle (726,746 samples, 0.02%)</title><rect x="1087.8" y="2053" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1090.83" y="2063.5" ></text>
</g>
<g >
<title>PtrCStringVector::free (10,305,868 samples, 0.21%)</title><rect x="728.2" y="1829" width="2.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="731.22" y="1839.5" ></text>
</g>
</g>
</svg>
